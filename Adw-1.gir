<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="4.0"/>
  <package name="libadwaita-1"/>
  <c:include name="adwaita.h"/>
  <namespace name="Adw"
             version="1"
             shared-library="libadwaita-1.so.0"
             c:identifier-prefixes="Adw"
             c:symbol-prefixes="adw">
    <class name="ActionRow"
           c:symbol-prefix="action_row"
           c:type="AdwActionRow"
           parent="PreferencesRow"
           glib:type-name="AdwActionRow"
           glib:get-type="adw_action_row_get_type"
           glib:type-struct="ActionRowClass">
      <source-position filename="../src/adw-action-row.h" line="37"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_action_row_new"
                   version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="419">Creates a new #AdwActionRow.</doc>
        <source-position filename="../src/adw-action-row.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-action-row.c"
               line="424">a new #AdwActionRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="activate" invoker="activate">
        <source-position filename="../src/adw-action-row.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate" c:identifier="adw_action_row_activate">
        <source-position filename="../src/adw-action-row.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_prefix"
              c:identifier="adw_action_row_add_prefix"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="794">Adds a prefix widget to @self.</doc>
        <source-position filename="../src/adw-action-row.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="796">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="797">the prefix widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_suffix"
              c:identifier="adw_action_row_add_suffix"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="818">Adds a suffix widget to @self.</doc>
        <source-position filename="../src/adw-action-row.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="820">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="821">the suffix widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_activatable_widget"
              c:identifier="adw_action_row_get_activatable_widget"
              version="0.0.7">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="539">Gets the widget activated when @self is activated.</doc>
        <source-position filename="../src/adw-action-row.h" line="55"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-action-row.c"
               line="545">the widget activated when @self is
         activated, or %NULL if none has been set.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="541">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="adw_action_row_get_icon_name"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="485">Gets the icon name for @self.</doc>
        <source-position filename="../src/adw-action-row.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-action-row.c"
               line="491">the icon name for @self.
The returned string is owned by the #AdwActionRow and should not be freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="487">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="adw_action_row_get_subtitle"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="434">Gets the subtitle for @self.</doc>
        <source-position filename="../src/adw-action-row.h" line="43"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-action-row.c"
               line="440">the subtitle for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="436">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle_lines"
              c:identifier="adw_action_row_get_subtitle_lines"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="736">Gets the number of lines at the end of which the subtitle label will be
ellipsized.
If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="../src/adw-action-row.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-action-row.c"
               line="744">the number of lines at the end of which the subtitle label will be
         ellipsized.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="738">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title_lines"
              c:identifier="adw_action_row_get_title_lines"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="678">Gets the number of lines at the end of which the title label will be
ellipsized.
If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="../src/adw-action-row.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-action-row.c"
               line="686">the number of lines at the end of which the title label will be
         ellipsized.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="680">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="adw_action_row_get_use_underline"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="619">Gets whether an embedded underline in the text of the title and subtitle
labels indicates a mnemonic. See adw_action_row_set_use_underline().</doc>
        <source-position filename="../src/adw-action-row.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-action-row.c"
               line="626">%TRUE if an embedded underline in the title and subtitle labels
         indicates the mnemonic accelerator keys.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="621">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_action_row_remove" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="842">Removes a child from @self.</doc>
        <source-position filename="../src/adw-action-row.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="844">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="845">the #GtkWidget to be removed</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_activatable_widget"
              c:identifier="adw_action_row_set_activatable_widget"
              version="0.0.7">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="574">Sets the widget to activate when @self is activated, either by clicking
on it, by calling adw_action_row_activate(), or via mnemonics in the title or
the subtitle. See the “use_underline” property to enable mnemonics.

The target widget will be activated by emitting the
GtkWidget::mnemonic-activate signal on it.</doc>
        <source-position filename="../src/adw-action-row.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="576">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="577">the target #GtkWidget, or %NULL to unset</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="adw_action_row_set_icon_name"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="508">Sets the icon name for @self.</doc>
        <source-position filename="../src/adw-action-row.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="510">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="511">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="adw_action_row_set_subtitle"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="456">Sets the subtitle for @self.</doc>
        <source-position filename="../src/adw-action-row.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="458">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="459">the subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle_lines"
              c:identifier="adw_action_row_set_subtitle_lines"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="761">Sets the number of lines at the end of which the subtitle label will be
ellipsized.
If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="../src/adw-action-row.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="763">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="subtitle_lines" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="764">the number of lines at the end of which the subtitle label will be ellipsized</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title_lines"
              c:identifier="adw_action_row_set_title_lines"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="703">Sets the number of lines at the end of which the title label will be
ellipsized.
If the value is 0, the number of lines won't be limited.</doc>
        <source-position filename="../src/adw-action-row.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="705">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="title_lines" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="706">the number of lines at the end of which the title label will be ellipsized</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="adw_action_row_set_use_underline"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="643">If true, an underline in the text of the title and subtitle labels indicates
the next character should be used for the mnemonic accelerator key.</doc>
        <source-position filename="../src/adw-action-row.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="645">a #AdwActionRow</doc>
            <type name="ActionRow" c:type="AdwActionRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-action-row.c"
                 line="646">%TRUE if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="activatable-widget"
                version="0.0.7"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="253">The activatable widget for this row.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="icon-name"
                version="0.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="239">The icon name for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subtitle"
                version="0.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="267">The subtitle for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subtitle-lines"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="312">The number of lines at the end of which the subtitle label will be
ellipsized.
Set this property to 0 if you don't want to limit the number of lines.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="title-lines"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="296">The number of lines at the end of which the title label will be ellipsized.
Set this property to 0 if you don't want to limit the number of lines.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="use-underline"
                version="0.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="281">Whether an embedded underline in the text of the title and subtitle labels
indicates a mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="PreferencesRow" c:type="AdwPreferencesRow"/>
      </field>
      <glib:signal name="activated" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.c"
             line="331">This signal is emitted after the row has been activated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ActionRowClass"
            c:type="AdwActionRowClass"
            glib:is-gtype-struct-for="ActionRow">
      <source-position filename="../src/adw-action-row.h" line="37"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/adw-action-row.h"
             line="26">The parent class</doc>
        <type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="../src/adw-action-row.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="ActionRow" c:type="AdwActionRow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="ApplicationWindow"
           c:symbol-prefix="application_window"
           c:type="AdwApplicationWindow"
           parent="Gtk.ApplicationWindow"
           glib:type-name="AdwApplicationWindow"
           glib:get-type="adw_application_window_get_type"
           glib:type-struct="ApplicationWindowClass">
      <source-position filename="../src/adw-application-window.h" line="30"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.Root"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new"
                   c:identifier="adw_application_window_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-application-window.c"
             line="154">Creates a new #AdwApplicationWindow for @app.</doc>
        <source-position filename="../src/adw-application-window.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-application-window.c"
               line="160">a newly created #AdwApplicationWindow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-application-window.c"
                 line="156">a #GtkApplication</doc>
            <type name="Gtk.Application" c:type="GtkApplication*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_child" c:identifier="adw_application_window_get_child">
        <doc xml:space="preserve"
             filename="../src/adw-application-window.c"
             line="191">Gets the child widget of @self.</doc>
        <source-position filename="../src/adw-application-window.h" line="39"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-application-window.c"
               line="197">the child widget of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-application-window.c"
                 line="193">a #AdwApplicationWindow</doc>
            <type name="ApplicationWindow" c:type="AdwApplicationWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child" c:identifier="adw_application_window_set_child">
        <doc xml:space="preserve"
             filename="../src/adw-application-window.c"
             line="172">Sets the child widget of @self.</doc>
        <source-position filename="../src/adw-application-window.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-application-window.c"
                 line="174">a #AdwApplicationWindow</doc>
            <type name="ApplicationWindow" c:type="AdwApplicationWindow*"/>
          </instance-parameter>
          <parameter name="child"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-application-window.c"
                 line="175">the child widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.ApplicationWindow" c:type="GtkApplicationWindow"/>
      </field>
    </class>
    <record name="ApplicationWindowClass"
            c:type="AdwApplicationWindowClass"
            glib:is-gtype-struct-for="ApplicationWindow">
      <source-position filename="../src/adw-application-window.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.ApplicationWindowClass"
              c:type="GtkApplicationWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Avatar"
           c:symbol-prefix="avatar"
           c:type="AdwAvatar"
           parent="Gtk.Widget"
           glib:type-name="AdwAvatar"
           glib:get-type="adw_avatar_get_type"
           glib:type-struct="AvatarClass">
      <source-position filename="../src/adw-avatar.h" line="23"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new" c:identifier="adw_avatar_new">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="464">Creates a new #AdwAvatar.</doc>
        <source-position filename="../src/adw-avatar.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.c"
               line="474">the newly created #AdwAvatar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="466">The size of the avatar</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="467">The text used to generate the color and initials if
@show_initials is %TRUE. The color is selected at random if @text is empty.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="show_initials" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="469">whether to show the initials or the fallback icon on
top of the color generated based on @text.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="draw_to_pixbuf"
              c:identifier="adw_avatar_draw_to_pixbuf"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="711">Renders @self into a pixbuf at @size and @scale_factor. This can be used to export the fallback avatar.</doc>
        <source-position filename="../src/adw-avatar.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.c"
               line="719">the pixbuf.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="713">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="714">The size of the pixbuf</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="scale_factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="715">The scale factor</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="adw_avatar_get_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="488">Gets the name of the icon in the icon theme to use when the icon should be
displayed.</doc>
        <source-position filename="../src/adw-avatar.h" line="45"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.c"
               line="495">the name of the icon from the icon theme.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="490">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_initials"
              c:identifier="adw_avatar_get_show_initials">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="584">Returns whether initials are used for the fallback or the icon.</doc>
        <source-position filename="../src/adw-avatar.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.c"
               line="590">%TRUE if the initials are used for the fallback.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="586">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="adw_avatar_get_size">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="658">Returns the size of the avatar.</doc>
        <source-position filename="../src/adw-avatar.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.c"
               line="664">the size of the avatar.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="660">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text" c:identifier="adw_avatar_get_text">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="538">Get the text used to generate the fallback initials and color</doc>
        <source-position filename="../src/adw-avatar.h" line="50"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.c"
               line="544">returns the text used to generate
the fallback initials. This is the internal string used by
the #AdwAvatar, and must not be modified.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="540">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="adw_avatar_set_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="507">Sets the name of the icon in the icon theme to use when the icon should be
displayed.
If no name is set, the avatar-default-symbolic icon will be used.
If the name doesn't match a valid icon, it is an error and no icon will be
displayed.
If the icon theme is changed, the image will be updated automatically.</doc>
        <source-position filename="../src/adw-avatar.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="509">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="510">the name of the icon from the icon theme</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image_load_func"
              c:identifier="adw_avatar_set_image_load_func">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="626">A callback which is called when the custom image need to be reloaded for some
reason (e.g. scale-factor changes).</doc>
        <source-position filename="../src/adw-avatar.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="628">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
          <parameter name="load_image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="629">callback to set a custom image</doc>
            <type name="AvatarImageLoadFunc" c:type="AdwAvatarImageLoadFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="630">user data passed to @load_image</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="631">destroy notifier for @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_initials"
              c:identifier="adw_avatar_set_show_initials">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="600">Sets whether the initials should be shown on the fallback avatar or the icon.</doc>
        <source-position filename="../src/adw-avatar.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="602">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
          <parameter name="show_initials" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="603">whether the initials should be shown on the fallback avatar
or the icon.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="adw_avatar_set_size">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="674">Sets the size of the avatar.</doc>
        <source-position filename="../src/adw-avatar.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="676">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="677">The size to be used for the avatar</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text" c:identifier="adw_avatar_set_text">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="556">Set the text used to generate the fallback initials color</doc>
        <source-position filename="../src/adw-avatar.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="558">a #AdwAvatar</doc>
            <type name="Avatar" c:type="AdwAvatar*"/>
          </instance-parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-avatar.c"
                 line="559">the text used to get the initials and color</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="386">The name of the icon in the icon theme to use when the icon should be
displayed.
If no name is set, the avatar-default-symbolic icon will be used.
If the name doesn't match a valid icon, it is an error and no icon will be
displayed.
If the icon theme is changed, the image will be updated automatically.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-initials" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="size" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="374">The avatar size of the avatar.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="text" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.c"
             line="405">The text used for the initials and for generating the color.
If #AdwAvatar:show-initials is %FALSE it's only used to generate the color.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="AvatarClass"
            c:type="AdwAvatarClass"
            glib:is-gtype-struct-for="Avatar">
      <source-position filename="../src/adw-avatar.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <callback name="AvatarImageLoadFunc" c:type="AdwAvatarImageLoadFunc">
      <doc xml:space="preserve"
           filename="../src/adw-avatar.h"
           line="25">The returned #GdkPixbuf is expected to be square with width and height set
to @size. The image is cropped to a circle without any scaling or transformation.</doc>
      <source-position filename="../src/adw-avatar.h" line="36"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="../src/adw-avatar.h"
             line="33">the #GdkPixbuf to use as a custom avatar
or %NULL to fallback to the generated avatar.</doc>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.h"
               line="27">the required size of the avatar</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../src/adw-avatar.h"
               line="28">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Carousel"
           c:symbol-prefix="carousel"
           c:type="AdwCarousel"
           parent="Gtk.Widget"
           glib:type-name="AdwCarousel"
           glib:get-type="adw_carousel_get_type"
           glib:type-struct="CarouselClass">
      <source-position filename="../src/adw-carousel.h" line="22"/>
      <implements name="Swipeable"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="adw_carousel_new" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="673">Create a new #AdwCarousel widget.</doc>
        <source-position filename="../src/adw-carousel.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="678">The newly created #AdwCarousel widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="append" c:identifier="adw_carousel_append" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="706">Appends @child to @self</doc>
        <source-position filename="../src/adw-carousel.h" line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="708">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="709">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_allow_mouse_drag"
              c:identifier="adw_carousel_get_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="1012">Sets whether @self can be dragged with mouse pointer</doc>
        <source-position filename="../src/adw-carousel.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="1018">%TRUE if @self can be dragged with mouse</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="1014">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_animation_duration"
              c:identifier="adw_carousel_get_animation_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="971">Gets animation duration used by adw_carousel_scroll_to().</doc>
        <source-position filename="../src/adw-carousel.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="977">Animation duration in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="973">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interactive"
              c:identifier="adw_carousel_get_interactive"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="891">Gets whether @self can be navigated.</doc>
        <source-position filename="../src/adw-carousel.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="897">%TRUE if @self can be swiped</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="893">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_pages"
              c:identifier="adw_carousel_get_n_pages"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="855">Gets the number of pages in @self.</doc>
        <source-position filename="../src/adw-carousel.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="861">The number of pages in @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="857">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nth_page"
              c:identifier="adw_carousel_get_nth_page"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="835">Gets the page at position @n.</doc>
        <source-position filename="../src/adw-carousel.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="842">the page</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="837">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="n" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="838">index of the page</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="adw_carousel_get_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="873">Gets current scroll position in @self. It's unitless, 1 matches 1 page.</doc>
        <source-position filename="../src/adw-carousel.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="879">The scroll position</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="875">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_duration"
              c:identifier="adw_carousel_get_reveal_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="1056">Gets duration of the animation used when adding or removing pages in
milliseconds.</doc>
        <source-position filename="../src/adw-carousel.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="1063">Page reveal duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="1058">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spacing"
              c:identifier="adw_carousel_get_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="935">Gets spacing between pages in pixels.</doc>
        <source-position filename="../src/adw-carousel.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-carousel.c"
               line="941">Spacing between pages</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="937">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert" c:identifier="adw_carousel_insert" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="724">Inserts @child into @self at position @position.

If position is -1, or larger than the number of pages,
@child will be appended to the end.</doc>
        <source-position filename="../src/adw-carousel.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="726">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="727">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="728">the position to insert @child in.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend" c:identifier="adw_carousel_prepend" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="688">Prepends @child to @self</doc>
        <source-position filename="../src/adw-carousel.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="690">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="691">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_carousel_remove" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="770">Removes @child from @self</doc>
        <source-position filename="../src/adw-carousel.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="772">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="773">a widget to remove</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder" c:identifier="adw_carousel_reorder" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="746">Moves @child into position @position.

If position is -1, or larger than the number of pages, @child will be moved
to the end.</doc>
        <source-position filename="../src/adw-carousel.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="748">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="749">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="750">the position to move @child to.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll_to"
              c:identifier="adw_carousel_scroll_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="789">Scrolls to @widget position with an animation.
#AdwCarousel:animation-duration property can be used for controlling the
duration.</doc>
        <source-position filename="../src/adw-carousel.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="791">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="792">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll_to_full"
              c:identifier="adw_carousel_scroll_to_full"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="810">Scrolls to @widget position with an animation.</doc>
        <source-position filename="../src/adw-carousel.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="812">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="813">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="814">animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_allow_mouse_drag"
              c:identifier="adw_carousel_set_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="1030">Sets whether @self can be dragged with mouse pointer. If @allow_mouse_drag
is %FALSE, dragging is only available on touch.</doc>
        <source-position filename="../src/adw-carousel.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="1032">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="allow_mouse_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="1033">whether @self can be dragged with mouse pointer</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_animation_duration"
              c:identifier="adw_carousel_set_animation_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="989">Sets animation duration used by adw_carousel_scroll_to().</doc>
        <source-position filename="../src/adw-carousel.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="991">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="992">animation duration in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interactive"
              c:identifier="adw_carousel_set_interactive"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="909">Sets whether @self can be navigated. This can be used to temporarily disable
a #AdwCarousel to only allow swiping in a certain state.</doc>
        <source-position filename="../src/adw-carousel.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="911">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="interactive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="912">whether @self can be swiped.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal_duration"
              c:identifier="adw_carousel_set_reveal_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="1075">Sets duration of the animation used when adding or removing pages in
milliseconds.</doc>
        <source-position filename="../src/adw-carousel.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="1077">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="reveal_duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="1078">the new reveal duration value</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_spacing"
              c:identifier="adw_carousel_set_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="953">Sets spacing between pages in pixels.</doc>
        <source-position filename="../src/adw-carousel.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="955">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="956">the new spacing value</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-mouse-drag"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="555">Sets whether the #AdwCarousel can be dragged with mouse pointer. If the
value is %FALSE, dragging is only available on touch.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="animation-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="541">Animation duration in milliseconds, used by adw_carousel_scroll_to().</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="interactive"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="510">Whether the carousel can be navigated. This can be used to temporarily
disable a #AdwCarousel to only allow navigating it in a certain state.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="n-pages" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="477">The number of pages in a #AdwCarousel</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="position" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="493">Current scrolling position, unitless. 1 matches 1 page. Use
adw_carousel_scroll_to() for changing it.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="reveal-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="570">Page reveal duration in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="525">Spacing between pages in pixels.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <glib:signal name="page-changed" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel.c"
             line="592">This signal is emitted after a page has been changed. This can be used to
implement "infinite scrolling" by connecting to this signal and amending
the pages.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel.c"
                 line="595">Current page</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CarouselClass"
            c:type="AdwCarouselClass"
            glib:is-gtype-struct-for="Carousel">
      <source-position filename="../src/adw-carousel.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="CarouselIndicatorDots"
           c:symbol-prefix="carousel_indicator_dots"
           c:type="AdwCarouselIndicatorDots"
           parent="Gtk.Widget"
           glib:type-name="AdwCarouselIndicatorDots"
           glib:get-type="adw_carousel_indicator_dots_get_type"
           glib:type-struct="CarouselIndicatorDotsClass">
      <source-position filename="../src/adw-carousel-indicator-dots.h"
                       line="23"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="adw_carousel_indicator_dots_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-dots.c"
             line="403">Create a new #AdwCarouselIndicatorDots widget.</doc>
        <source-position filename="../src/adw-carousel-indicator-dots.h"
                         line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-carousel-indicator-dots.c"
               line="408">The newly created #AdwCarouselIndicatorDots widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_carousel"
              c:identifier="adw_carousel_indicator_dots_get_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-dots.c"
             line="418">Get the #AdwCarousel the indicator uses.

See: adw_carousel_indicator_dots_set_carousel()</doc>
        <source-position filename="../src/adw-carousel-indicator-dots.h"
                         line="29"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-carousel-indicator-dots.c"
               line="426">the #AdwCarousel, or %NULL if none has been set</doc>
          <type name="Carousel" c:type="AdwCarousel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel-indicator-dots.c"
                 line="420">a #AdwCarouselIndicatorDots</doc>
            <type name="CarouselIndicatorDots"
                  c:type="AdwCarouselIndicatorDots*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_carousel"
              c:identifier="adw_carousel_indicator_dots_set_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-dots.c"
             line="439">Sets the #AdwCarousel to use.</doc>
        <source-position filename="../src/adw-carousel-indicator-dots.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel-indicator-dots.c"
                 line="441">a #AdwCarouselIndicatorDots</doc>
            <type name="CarouselIndicatorDots"
                  c:type="AdwCarouselIndicatorDots*"/>
          </instance-parameter>
          <parameter name="carousel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel-indicator-dots.c"
                 line="442">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </parameter>
        </parameters>
      </method>
      <property name="carousel"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-dots.c"
             line="375">The #AdwCarousel the indicator uses.</doc>
        <type name="Carousel"/>
      </property>
    </class>
    <record name="CarouselIndicatorDotsClass"
            c:type="AdwCarouselIndicatorDotsClass"
            glib:is-gtype-struct-for="CarouselIndicatorDots">
      <source-position filename="../src/adw-carousel-indicator-dots.h"
                       line="23"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="CarouselIndicatorLines"
           c:symbol-prefix="carousel_indicator_lines"
           c:type="AdwCarouselIndicatorLines"
           parent="Gtk.Widget"
           glib:type-name="AdwCarouselIndicatorLines"
           glib:get-type="adw_carousel_indicator_lines_get_type"
           glib:type-struct="CarouselIndicatorLinesClass">
      <source-position filename="../src/adw-carousel-indicator-lines.h"
                       line="23"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="adw_carousel_indicator_lines_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-lines.c"
             line="390">Create a new #AdwCarouselIndicatorLines widget.</doc>
        <source-position filename="../src/adw-carousel-indicator-lines.h"
                         line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-carousel-indicator-lines.c"
               line="395">The newly created #AdwCarouselIndicatorLines widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_carousel"
              c:identifier="adw_carousel_indicator_lines_get_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-lines.c"
             line="405">Get the #AdwCarousel the indicator uses.

See: adw_carousel_indicator_lines_set_carousel()</doc>
        <source-position filename="../src/adw-carousel-indicator-lines.h"
                         line="29"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-carousel-indicator-lines.c"
               line="413">the #AdwCarousel, or %NULL if none has been set</doc>
          <type name="Carousel" c:type="AdwCarousel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel-indicator-lines.c"
                 line="407">a #AdwCarouselIndicatorLines</doc>
            <type name="CarouselIndicatorLines"
                  c:type="AdwCarouselIndicatorLines*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_carousel"
              c:identifier="adw_carousel_indicator_lines_set_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-lines.c"
             line="426">Sets the #AdwCarousel to use.</doc>
        <source-position filename="../src/adw-carousel-indicator-lines.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel-indicator-lines.c"
                 line="428">a #AdwCarouselIndicatorLines</doc>
            <type name="CarouselIndicatorLines"
                  c:type="AdwCarouselIndicatorLines*"/>
          </instance-parameter>
          <parameter name="carousel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-carousel-indicator-lines.c"
                 line="429">a #AdwCarousel</doc>
            <type name="Carousel" c:type="AdwCarousel*"/>
          </parameter>
        </parameters>
      </method>
      <property name="carousel"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-carousel-indicator-lines.c"
             line="362">The #AdwCarousel the indicator uses.</doc>
        <type name="Carousel"/>
      </property>
    </class>
    <record name="CarouselIndicatorLinesClass"
            c:type="AdwCarouselIndicatorLinesClass"
            glib:is-gtype-struct-for="CarouselIndicatorLines">
      <source-position filename="../src/adw-carousel-indicator-lines.h"
                       line="23"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <enumeration name="CenteringPolicy"
                 glib:type-name="AdwCenteringPolicy"
                 glib:get-type="adw_centering_policy_get_type"
                 c:type="AdwCenteringPolicy">
      <member name="loose"
              value="0"
              c:identifier="ADW_CENTERING_POLICY_LOOSE"
              glib:nick="loose">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="55">Keep the title centered when possible</doc>
      </member>
      <member name="strict"
              value="1"
              c:identifier="ADW_CENTERING_POLICY_STRICT"
              glib:nick="strict">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="56">Keep the title centered at all cost</doc>
      </member>
    </enumeration>
    <class name="Clamp"
           c:symbol-prefix="clamp"
           c:type="AdwClamp"
           parent="Gtk.Widget"
           glib:type-name="AdwClamp"
           glib:get-type="adw_clamp_get_type"
           glib:type-struct="ClampClass">
      <source-position filename="../src/adw-clamp.h" line="22"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="adw_clamp_new" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="239">Creates a new #AdwClamp.</doc>
        <source-position filename="../src/adw-clamp.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp.c"
               line="244">a new #AdwClamp</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_child" c:identifier="adw_clamp_get_child">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="254">Gets the child widget of @self.</doc>
        <source-position filename="../src/adw-clamp.h" line="28"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-clamp.c"
               line="260">the child widget of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="256">a #AdwClamp</doc>
            <type name="Clamp" c:type="AdwClamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_maximum_size"
              c:identifier="adw_clamp_get_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="297">Gets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/adw-clamp.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp.c"
               line="304">the maximum width to allocate to the contained child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="299">a #AdwClamp</doc>
            <type name="Clamp" c:type="AdwClamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tightening_threshold"
              c:identifier="adw_clamp_get_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="348">Gets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/adw-clamp.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp.c"
               line="355">the size starting from which the clamp will tighten its grip on the
child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="350">a #AdwClamp</doc>
            <type name="Clamp" c:type="AdwClamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child" c:identifier="adw_clamp_set_child">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="270">Sets the child widget of @self.</doc>
        <source-position filename="../src/adw-clamp.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="272">a #AdwClamp</doc>
            <type name="Clamp" c:type="AdwClamp*"/>
          </instance-parameter>
          <parameter name="child"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="273">the child widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_maximum_size"
              c:identifier="adw_clamp_set_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="320">Sets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/adw-clamp.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="322">a #AdwClamp</doc>
            <type name="Clamp" c:type="AdwClamp*"/>
          </instance-parameter>
          <parameter name="maximum_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="323">the maximum size</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tightening_threshold"
              c:identifier="adw_clamp_set_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="372">Sets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/adw-clamp.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="374">a #AdwClamp</doc>
            <type name="Clamp" c:type="AdwClamp*"/>
          </instance-parameter>
          <parameter name="tightening_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp.c"
                 line="375">the tightening threshold</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="child" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="maximum-size"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="168">The maximum size to allocate to the child. It is the width if the clamp is
horizontal, or the height if it is vertical.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="tightening-threshold"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-clamp.c"
             line="183">The size starting from which the clamp will tighten its grip on the child,
slowly allocating less and less of the available size up to the maximum
allocated size. Below that threshold and below the maximum width, the child
will be allocated all the available size.

If the threshold is greater than the maximum size to allocate to the child,
the child will be allocated all the width up to the maximum.
If the threshold is lower than the minimum size to allocate to the child,
that size will be used as the tightening threshold.

Effectively, tightening the grip on the child before it reaches its maximum
size makes transitions to and from the maximum size smoother when resizing.</doc>
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="ClampClass"
            c:type="AdwClampClass"
            glib:is-gtype-struct-for="Clamp">
      <source-position filename="../src/adw-clamp.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="ClampLayout"
           c:symbol-prefix="clamp_layout"
           c:type="AdwClampLayout"
           parent="Gtk.LayoutManager"
           glib:type-name="AdwClampLayout"
           glib:get-type="adw_clamp_layout_get_type"
           glib:type-struct="ClampLayoutClass">
      <source-position filename="../src/adw-clamp-layout.h" line="22"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="adw_clamp_layout_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-layout.c"
             line="375">Creates a new #AdwClampLayout.</doc>
        <source-position filename="../src/adw-clamp-layout.h" line="25"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-clamp-layout.c"
               line="380">a new #AdwClampLayout</doc>
          <type name="Gtk.LayoutManager" c:type="GtkLayoutManager*"/>
        </return-value>
      </constructor>
      <method name="get_maximum_size"
              c:identifier="adw_clamp_layout_get_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-layout.c"
             line="390">Gets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/adw-clamp-layout.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp-layout.c"
               line="397">the maximum width to allocate to the contained child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-layout.c"
                 line="392">a #AdwClampLayout</doc>
            <type name="ClampLayout" c:type="AdwClampLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tightening_threshold"
              c:identifier="adw_clamp_layout_get_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-layout.c"
             line="435">Gets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/adw-clamp-layout.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp-layout.c"
               line="442">the size starting from which the clamp will tighten its grip on the
child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-layout.c"
                 line="437">a #AdwClampLayout</doc>
            <type name="ClampLayout" c:type="AdwClampLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_maximum_size"
              c:identifier="adw_clamp_layout_set_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-layout.c"
             line="409">Sets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/adw-clamp-layout.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-layout.c"
                 line="411">a #AdwClampLayout</doc>
            <type name="ClampLayout" c:type="AdwClampLayout*"/>
          </instance-parameter>
          <parameter name="maximum_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-layout.c"
                 line="412">the maximum size</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tightening_threshold"
              c:identifier="adw_clamp_layout_set_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-layout.c"
             line="455">Sets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/adw-clamp-layout.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-layout.c"
                 line="457">a #AdwClampLayout</doc>
            <type name="ClampLayout" c:type="AdwClampLayout*"/>
          </instance-parameter>
          <parameter name="tightening_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-layout.c"
                 line="458">the tightening threshold</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="maximum-size"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-layout.c"
             line="325">The maximum size to allocate to the child. It is the width if the clamp is
horizontal, or the height if it is vertical.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="tightening-threshold"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-layout.c"
             line="340">The size starting from which the clamp will tighten its grip on the child,
slowly allocating less and less of the available size up to the maximum
allocated size. Below that threshold and below the maximum width, the child
will be allocated all the available size.

If the threshold is greater than the maximum size to allocate to the child,
the child will be allocated all the width up to the maximum.
If the threshold is lower than the minimum size to allocate to the child,
that size will be used as the tightening threshold.

Effectively, tightening the grip on the child before it reaches its maximum
size makes transitions to and from the maximum size smoother when resizing.</doc>
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="ClampLayoutClass"
            c:type="AdwClampLayoutClass"
            glib:is-gtype-struct-for="ClampLayout">
      <source-position filename="../src/adw-clamp-layout.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.LayoutManagerClass" c:type="GtkLayoutManagerClass"/>
      </field>
    </record>
    <class name="ClampScrollable"
           c:symbol-prefix="clamp_scrollable"
           c:type="AdwClampScrollable"
           parent="Gtk.Widget"
           glib:type-name="AdwClampScrollable"
           glib:get-type="adw_clamp_scrollable_get_type"
           glib:type-struct="ClampScrollableClass">
      <source-position filename="../src/adw-clamp-scrollable.h" line="22"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new"
                   c:identifier="adw_clamp_scrollable_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="341">Creates a new #AdwClampScrollable.</doc>
        <source-position filename="../src/adw-clamp-scrollable.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp-scrollable.c"
               line="346">a new #AdwClampScrollable</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_child" c:identifier="adw_clamp_scrollable_get_child">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="356">Gets the child widget of @self.</doc>
        <source-position filename="../src/adw-clamp-scrollable.h" line="28"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-clamp-scrollable.c"
               line="362">the child widget of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="358">a #AdwClampScrollable</doc>
            <type name="ClampScrollable" c:type="AdwClampScrollable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_maximum_size"
              c:identifier="adw_clamp_scrollable_get_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="424">Gets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/adw-clamp-scrollable.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp-scrollable.c"
               line="431">the maximum width to allocate to the contained child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="426">a #AdwClampScrollable</doc>
            <type name="ClampScrollable" c:type="AdwClampScrollable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tightening_threshold"
              c:identifier="adw_clamp_scrollable_get_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="475">Gets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/adw-clamp-scrollable.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-clamp-scrollable.c"
               line="482">the size starting from which the clamp will tighten its grip on the
child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="477">a #AdwClampScrollable</doc>
            <type name="ClampScrollable" c:type="AdwClampScrollable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child" c:identifier="adw_clamp_scrollable_set_child">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="372">Sets the child widget of @self.</doc>
        <source-position filename="../src/adw-clamp-scrollable.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="374">a #AdwClampScrollable</doc>
            <type name="ClampScrollable" c:type="AdwClampScrollable*"/>
          </instance-parameter>
          <parameter name="child"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="375">the child widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_maximum_size"
              c:identifier="adw_clamp_scrollable_set_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="447">Sets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/adw-clamp-scrollable.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="449">a #AdwClampScrollable</doc>
            <type name="ClampScrollable" c:type="AdwClampScrollable*"/>
          </instance-parameter>
          <parameter name="maximum_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="450">the maximum size</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tightening_threshold"
              c:identifier="adw_clamp_scrollable_set_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="499">Sets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/adw-clamp-scrollable.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="501">a #AdwClampScrollable</doc>
            <type name="ClampScrollable" c:type="AdwClampScrollable*"/>
          </instance-parameter>
          <parameter name="tightening_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-clamp-scrollable.c"
                 line="502">the tightening threshold</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="child" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="maximum-size"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="270">The maximum size to allocate to the child. It is the width if the clamp is
horizontal, or the height if it is vertical.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="tightening-threshold"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-clamp-scrollable.c"
             line="285">The size starting from which the clamp will tighten its grip on the child,
slowly allocating less and less of the available size up to the maximum
allocated size. Below that threshold and below the maximum width, the child
will be allocated all the available size.

If the threshold is greater than the maximum size to allocate to the child,
the child will be allocated all the width up to the maximum.
If the threshold is lower than the minimum size to allocate to the child,
that size will be used as the tightening threshold.

Effectively, tightening the grip on the child before it reaches its maximum
size makes transitions to and from the maximum size smoother when resizing.</doc>
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="ClampScrollableClass"
            c:type="AdwClampScrollableClass"
            glib:is-gtype-struct-for="ClampScrollable">
      <source-position filename="../src/adw-clamp-scrollable.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="ComboRow"
           c:symbol-prefix="combo_row"
           c:type="AdwComboRow"
           parent="ActionRow"
           glib:type-name="AdwComboRow"
           glib:get-type="adw_combo_row_get_type"
           glib:type-struct="ComboRowClass">
      <source-position filename="../src/adw-combo-row.h" line="36"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new" c:identifier="adw_combo_row_new" version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="515">Creates a new #AdwComboRow.</doc>
        <source-position filename="../src/adw-combo-row.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="520">a new #AdwComboRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_expression"
              c:identifier="adw_combo_row_get_expression">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="787">Gets the expression set with adw_combo_row_set_expression().</doc>
        <source-position filename="../src/adw-combo-row.h" line="69"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="793">a #GtkExpression or %NULL</doc>
          <type name="Gtk.Expression" c:type="GtkExpression*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="789">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_factory" c:identifier="adw_combo_row_get_factory">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="685">Gets the factory that's currently used to populate list items.

The factory returned by this function is always used for the
item in the button. It is also used for items in the popup
if #AdwComboRow:list-factory is not set.</doc>
        <source-position filename="../src/adw-combo-row.h" line="57"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="695">The factory in use</doc>
          <type name="Gtk.ListItemFactory" c:type="GtkListItemFactory*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="687">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_list_factory"
              c:identifier="adw_combo_row_get_list_factory">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="738">Gets the factory that's currently used to populate list items in the popup.</doc>
        <source-position filename="../src/adw-combo-row.h" line="63"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="744">The factory in use</doc>
          <type name="Gtk.ListItemFactory" c:type="GtkListItemFactory*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="740">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model" c:identifier="adw_combo_row_get_model">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="603">Gets the model that provides the displayed items.</doc>
        <source-position filename="../src/adw-combo-row.h" line="42"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="609">The model in use</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="605">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected" c:identifier="adw_combo_row_get_selected">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="556">Gets the position of the selected item.</doc>
        <source-position filename="../src/adw-combo-row.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="562">the position of the selected item, or #GTK_INVALID_LIST_POSITION
    if not item is selected</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="558">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_item"
              c:identifier="adw_combo_row_get_selected_item">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="580">Gets the selected item. If no item is selected, %NULL is returned.</doc>
        <source-position filename="../src/adw-combo-row.h" line="54"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="586">The selected item</doc>
          <type name="GObject.Object" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="582">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_subtitle"
              c:identifier="adw_combo_row_get_use_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="841">Gets whether the current value of @self should be displayed as its subtitle.</doc>
        <source-position filename="../src/adw-combo-row.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-combo-row.c"
               line="847">whether the current value of @self should be displayed as its subtitle</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="843">a #GtkListBoxRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_expression"
              c:identifier="adw_combo_row_set_expression">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="807">Sets the expression that gets evaluated to obtain strings, used to bind
strings to labels produced by the default factory.

The expression must have a value type of #G_TYPE_STRING.</doc>
        <source-position filename="../src/adw-combo-row.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="809">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
          <parameter name="expression"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="810">a #GtkExpression, or %NULL</doc>
            <type name="Gtk.Expression" c:type="GtkExpression*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_factory" c:identifier="adw_combo_row_set_factory">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="709">Sets the #GtkListItemFactory to use for populating list items.</doc>
        <source-position filename="../src/adw-combo-row.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="711">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
          <parameter name="factory"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="712">the factory to use or %NULL for none</doc>
            <type name="Gtk.ListItemFactory" c:type="GtkListItemFactory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_list_factory"
              c:identifier="adw_combo_row_set_list_factory">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="758">Sets the #GtkListItemFactory to use for populating list items in the popup.</doc>
        <source-position filename="../src/adw-combo-row.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="760">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
          <parameter name="factory"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="761">the factory to use or %NULL for none</doc>
            <type name="Gtk.ListItemFactory" c:type="GtkListItemFactory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model" c:identifier="adw_combo_row_set_model">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="623">Sets the #GListModel to use.</doc>
        <source-position filename="../src/adw-combo-row.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="625">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="626">the model to use or %NULL for none</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selected" c:identifier="adw_combo_row_set_selected">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="530">Selects the item at the given position.</doc>
        <source-position filename="../src/adw-combo-row.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="532">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="533">the position of the item to select, or #GTK_INVALID_LIST_POSITION</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_subtitle"
              c:identifier="adw_combo_row_set_use_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="863">Sets whether the current value of @self should be displayed as its subtitle.

If %TRUE, you should not access AdwActionRow:subtitle.</doc>
        <source-position filename="../src/adw-combo-row.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="865">a #AdwComboRow</doc>
            <type name="ComboRow" c:type="AdwComboRow*"/>
          </instance-parameter>
          <parameter name="use_subtitle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-combo-row.c"
                 line="866">%TRUE to set the current value as the subtitle</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="expression" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="463">An expression to evaluate to obtain strings, used to bind strings to labels
produced by the default factory.</doc>
        <type name="Gtk.Expression"/>
      </property>
      <property name="factory" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="437">Factory for populating list items.</doc>
        <type name="Gtk.ListItemFactory"/>
      </property>
      <property name="list-factory" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="449">The factory for populating list items in the popup.

If this is not set, #AdwComboRow:factory is used.</doc>
        <type name="Gtk.ListItemFactory"/>
      </property>
      <property name="model" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="400">Model for the displayed items.</doc>
        <type name="Gio.ListModel"/>
      </property>
      <property name="selected" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="412">The position of the selected item in #AdwComboRow:model,
or #GTK_INVALID_LIST_POSITION if no item is selected.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="selected-item" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="425">The selected item.</doc>
        <type name="GObject.Object"/>
      </property>
      <property name="use-subtitle"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.c"
             line="475">%TRUE to set the current value as the subtitle.

If you use a custom list item factory, you will need to give the row a
name conversion expression with #AdwComboRow:expression.

If %TRUE, you should not access #AdwActionRow:subtitle.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="ActionRow" c:type="AdwActionRow"/>
      </field>
    </class>
    <record name="ComboRowClass"
            c:type="AdwComboRowClass"
            glib:is-gtype-struct-for="ComboRow">
      <source-position filename="../src/adw-combo-row.h" line="36"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/adw-combo-row.h"
             line="28">The parent class</doc>
        <type name="ActionRowClass" c:type="AdwActionRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="EnumListModel"
           c:symbol-prefix="enum_list_model"
           c:type="AdwEnumListModel"
           parent="GObject.Object"
           glib:type-name="AdwEnumListModel"
           glib:get-type="adw_enum_list_model_get_type"
           glib:type-struct="EnumListModelClass">
      <source-position filename="../src/adw-enum-list-model.h" line="23"/>
      <implements name="Gio.ListModel"/>
      <constructor name="new" c:identifier="adw_enum_list_model_new">
        <source-position filename="../src/adw-enum-list-model.h" line="26"/>
        <return-value transfer-ownership="full">
          <type name="EnumListModel" c:type="AdwEnumListModel*"/>
        </return-value>
        <parameters>
          <parameter name="enum_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="find_position"
              c:identifier="adw_enum_list_model_find_position">
        <source-position filename="../src/adw-enum-list-model.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumListModel" c:type="AdwEnumListModel*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enum_type"
              c:identifier="adw_enum_list_model_get_enum_type">
        <source-position filename="../src/adw-enum-list-model.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumListModel" c:type="AdwEnumListModel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="enum-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </property>
    </class>
    <record name="EnumListModelClass"
            c:type="AdwEnumListModelClass"
            glib:is-gtype-struct-for="EnumListModel">
      <source-position filename="../src/adw-enum-list-model.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="EnumValueObject"
           c:symbol-prefix="enum_value_object"
           c:type="AdwEnumValueObject"
           parent="GObject.Object"
           glib:type-name="AdwEnumValueObject"
           glib:get-type="adw_enum_value_object_get_type"
           glib:type-struct="EnumValueObjectClass">
      <source-position filename="../src/adw-enum-value-object.h" line="23"/>
      <method name="get_name" c:identifier="adw_enum_value_object_get_name">
        <source-position filename="../src/adw-enum-value-object.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumValueObject" c:type="AdwEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nick" c:identifier="adw_enum_value_object_get_nick">
        <source-position filename="../src/adw-enum-value-object.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumValueObject" c:type="AdwEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="adw_enum_value_object_get_value">
        <source-position filename="../src/adw-enum-value-object.h" line="26"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumValueObject" c:type="AdwEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="nick" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="value" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="EnumValueObjectClass"
            c:type="AdwEnumValueObjectClass"
            glib:is-gtype-struct-for="EnumValueObject">
      <source-position filename="../src/adw-enum-value-object.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExpanderRow"
           c:symbol-prefix="expander_row"
           c:type="AdwExpanderRow"
           parent="PreferencesRow"
           glib:type-name="AdwExpanderRow"
           glib:get-type="adw_expander_row_get_type"
           glib:type-struct="ExpanderRowClass">
      <source-position filename="../src/adw-expander-row.h" line="35"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_expander_row_new"
                   version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="339">Creates a new #AdwExpanderRow.</doc>
        <source-position filename="../src/adw-expander-row.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-expander-row.c"
               line="344">a new #AdwExpanderRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="adw_expander_row_add">
        <source-position filename="../src/adw-expander-row.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_action"
              c:identifier="adw_expander_row_add_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="627">Adds an action widget to @self.</doc>
        <source-position filename="../src/adw-expander-row.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="629">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="630">the action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_prefix"
              c:identifier="adw_expander_row_add_prefix"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="651">Adds a prefix widget to @self.</doc>
        <source-position filename="../src/adw-expander-row.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="653">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="654">the prefix widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enable_expansion"
              c:identifier="adw_expander_row_get_enable_expansion"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="523">Gets whether the expansion of @self is enabled.</doc>
        <source-position filename="../src/adw-expander-row.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-expander-row.c"
               line="529">whether the expansion of @self is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="525">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expanded" c:identifier="adw_expander_row_get_expanded">
        <source-position filename="../src/adw-expander-row.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="adw_expander_row_get_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="445">Gets the icon name for @self.</doc>
        <source-position filename="../src/adw-expander-row.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-expander-row.c"
               line="451">the icon name for @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="447">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_enable_switch"
              c:identifier="adw_expander_row_get_show_enable_switch"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="576">Gets whether the switch enabling the expansion of @self is visible.</doc>
        <source-position filename="../src/adw-expander-row.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-expander-row.c"
               line="582">whether the switch enabling the expansion of @self is visible.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="578">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="adw_expander_row_get_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="354">Gets the subtitle for @self.</doc>
        <source-position filename="../src/adw-expander-row.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-expander-row.c"
               line="360">the subtitle for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="356">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="adw_expander_row_get_use_underline"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="398">Gets whether an embedded underline in the text of the title and subtitle
labels indicates a mnemonic. See adw_expander_row_set_use_underline().</doc>
        <source-position filename="../src/adw-expander-row.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-expander-row.c"
               line="405">%TRUE if an embedded underline in the title and subtitle labels
         indicates the mnemonic accelerator keys.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="400">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_expander_row_remove">
        <source-position filename="../src/adw-expander-row.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enable_expansion"
              c:identifier="adw_expander_row_set_enable_expansion"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="545">Sets whether the expansion of @self is enabled.</doc>
        <source-position filename="../src/adw-expander-row.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="547">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="enable_expansion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="548">%TRUE to enable the expansion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expanded" c:identifier="adw_expander_row_set_expanded">
        <source-position filename="../src/adw-expander-row.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="expanded" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="adw_expander_row_set_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="467">Sets the icon name for @self.</doc>
        <source-position filename="../src/adw-expander-row.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="469">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="470">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_enable_switch"
              c:identifier="adw_expander_row_set_show_enable_switch"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="598">Sets whether the switch enabling the expansion of @self is visible.</doc>
        <source-position filename="../src/adw-expander-row.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="600">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="show_enable_switch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="601">%TRUE to show the switch enabling the expansion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="adw_expander_row_set_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="376">Sets the subtitle for @self.</doc>
        <source-position filename="../src/adw-expander-row.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="378">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="379">the subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="adw_expander_row_set_use_underline"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="422">If true, an underline in the text of the title and subtitle labels indicates
the next character should be used for the mnemonic accelerator key.</doc>
        <source-position filename="../src/adw-expander-row.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="424">a #AdwExpanderRow</doc>
            <type name="ExpanderRow" c:type="AdwExpanderRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-expander-row.c"
                 line="425">%TRUE if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="enable-expansion" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="246">%TRUE if the expansion is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="expanded" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="234">%TRUE if the row is expanded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="220">The icon name for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-enable-switch"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="258">%TRUE if the switch enabling the expansion is visible.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="191">The subtitle for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-underline"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.c"
             line="205">Whether an embedded underline in the text of the title and subtitle labels
indicates a mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="PreferencesRow" c:type="AdwPreferencesRow"/>
      </field>
    </class>
    <record name="ExpanderRowClass"
            c:type="AdwExpanderRowClass"
            glib:is-gtype-struct-for="ExpanderRow">
      <source-position filename="../src/adw-expander-row.h" line="35"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/adw-expander-row.h"
             line="27">The parent class</doc>
        <type name="PreferencesRowClass" c:type="AdwPreferencesRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Flap"
           c:symbol-prefix="flap"
           c:type="AdwFlap"
           parent="Gtk.Widget"
           glib:type-name="AdwFlap"
           glib:get-type="adw_flap_get_type"
           glib:type-struct="FlapClass">
      <source-position filename="../src/adw-flap.h" line="23"/>
      <implements name="Swipeable"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="adw_flap_new" version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1789">Creates a new #AdwFlap.</doc>
        <source-position filename="../src/adw-flap.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="1794">a new #AdwFlap</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_content"
              c:identifier="adw_flap_get_content"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1804">Gets the content widget for @self</doc>
        <source-position filename="../src/adw-flap.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="1810">the content widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1806">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flap" c:identifier="adw_flap_get_flap" version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1855">Gets the flap widget for @self</doc>
        <source-position filename="../src/adw-flap.h" line="47"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="1861">the flap widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1857">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flap_position"
              c:identifier="adw_flap_get_flap_position"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1959">Gets the flap position for @self.</doc>
        <source-position filename="../src/adw-flap.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="1965">the flap position for @self</doc>
          <type name="Gtk.PackType" c:type="GtkPackType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1961">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fold_duration"
              c:identifier="adw_flap_get_fold_duration"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2162">Returns the amount of time (in milliseconds) that fold transitions in @self
will take.</doc>
        <source-position filename="../src/adw-flap.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2169">the fold transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2164">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fold_policy"
              c:identifier="adw_flap_get_fold_policy"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2102">Gets the current fold policy of @self. See adw_flap_set_fold_policy().</doc>
        <source-position filename="../src/adw-flap.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2108">the current fold policy of @self</doc>
          <type name="FlapFoldPolicy" c:type="AdwFlapFoldPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2104">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folded"
              c:identifier="adw_flap_get_folded"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2204">Gets whether @self is currently folded.

See #AdwFlap:fold-policy.</doc>
        <source-position filename="../src/adw-flap.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2212">%TRUE if @self is currently folded, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2206">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locked"
              c:identifier="adw_flap_get_locked"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2224">Gets whether @self is locked.</doc>
        <source-position filename="../src/adw-flap.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2230">%TRUE if @self is locked, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2226">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_modal" c:identifier="adw_flap_get_modal" version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2324">Gets whether the @self is modal. See adw_flap_set_modal().</doc>
        <source-position filename="../src/adw-flap.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2330">%TRUE if @self is modal</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2326">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_duration"
              c:identifier="adw_flap_get_reveal_duration"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2041">Returns the amount of time (in milliseconds) that reveal transitions in @self
will take.</doc>
        <source-position filename="../src/adw-flap.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2048">the reveal transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2043">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_flap"
              c:identifier="adw_flap_get_reveal_flap"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2005">Gets whether the flap widget is revealed for @self.</doc>
        <source-position filename="../src/adw-flap.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2011">%TRUE if the flap widget is revealed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2007">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_progress"
              c:identifier="adw_flap_get_reveal_progress"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2083">Gets the current reveal transition progress for @self. 0 means fully hidden,
1 means fully revealed. See #AdwFlap:reveal-flap.</doc>
        <source-position filename="../src/adw-flap.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2090">the current reveal progress for @self</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2085">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_separator"
              c:identifier="adw_flap_get_separator"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1907">Gets the separator widget for @self.</doc>
        <source-position filename="../src/adw-flap.h" line="53"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="1913">the separator widget for @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1909">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swipe_to_close"
              c:identifier="adw_flap_get_swipe_to_close"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2425">Gets whether @self can be closed with a swipe gesture.</doc>
        <source-position filename="../src/adw-flap.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2431">%TRUE if @self can be closed with a swipe gesture</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2427">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swipe_to_open"
              c:identifier="adw_flap_get_swipe_to_open"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2378">Gets whether @self can be opened with a swipe gesture.</doc>
        <source-position filename="../src/adw-flap.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2384">%TRUE if @self can be opened with a swipe gesture</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2380">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="adw_flap_get_transition_type"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2271">Gets the type of animation that will be used for reveal and fold transitions
in @self.</doc>
        <source-position filename="../src/adw-flap.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-flap.c"
               line="2278">the current transition type of @self</doc>
          <type name="FlapTransitionType" c:type="AdwFlapTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2273">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_content"
              c:identifier="adw_flap_set_content"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1822">Sets the content widget for @self, always displayed when unfolded, and
partially visible when folded.</doc>
        <source-position filename="../src/adw-flap.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1824">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="content"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1825">the content widget, or %NULL</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flap" c:identifier="adw_flap_set_flap" version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1873">Sets the flap widget for @self, only visible when #AdwFlap:reveal-progress is
greater than 0.</doc>
        <source-position filename="../src/adw-flap.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1875">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="flap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1876">the flap widget, or %NULL</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flap_position"
              c:identifier="adw_flap_set_flap_position"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1977">Sets the flap position for @self. If @GTK_PACK_START, the flap is displayed
before the content, if @GTK_PACK_END, it's displayed after the content.</doc>
        <source-position filename="../src/adw-flap.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1979">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1980">the new value</doc>
            <type name="Gtk.PackType" c:type="GtkPackType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fold_duration"
              c:identifier="adw_flap_set_fold_duration"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2181">Sets the duration that fold transitions in @self will take.</doc>
        <source-position filename="../src/adw-flap.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2183">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2184">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fold_policy"
              c:identifier="adw_flap_set_fold_policy"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2120">Sets the current fold policy for @self. See #AdwFlapFoldPolicy for available
policies.</doc>
        <source-position filename="../src/adw-flap.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2122">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2123">Fold policy</doc>
            <type name="FlapFoldPolicy" c:type="AdwFlapFoldPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locked"
              c:identifier="adw_flap_set_locked"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2242">Sets whether @self is locked.

If %FALSE, folding @self when the flap is revealed automatically closes it,
and unfolding it when the flap is not revealed opens it. If %TRUE,
#AdwFlap:reveal-flap value never changes on its own.</doc>
        <source-position filename="../src/adw-flap.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2244">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="locked" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2245">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modal" c:identifier="adw_flap_set_modal" version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2342">Sets whether the @self can be closed with a click.

If @modal is %TRUE, clicking the content widget while flap is revealed, or
pressing Escape key, will close the flap. If %FALSE, clicks are passed
through to the content widget.</doc>
        <source-position filename="../src/adw-flap.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2344">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="modal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2345">Whether @self can be closed with a click</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal_duration"
              c:identifier="adw_flap_set_reveal_duration"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2060">Sets the duration that reveal transitions in @self will take.</doc>
        <source-position filename="../src/adw-flap.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2062">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2063">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal_flap"
              c:identifier="adw_flap_set_reveal_flap"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2023">Sets whether the flap widget is revealed for @self.</doc>
        <source-position filename="../src/adw-flap.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2025">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="reveal_flap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2026">%TRUE to reveal the flap widget, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_separator"
              c:identifier="adw_flap_set_separator"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1925">Sets the separator widget for @self, displayed between content and flap when
there's no shadow to display. When exactly it's visible depends on the
#AdwFlap:transition-type value. If %NULL, no separator will be used.</doc>
        <source-position filename="../src/adw-flap.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1927">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="separator"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="1928">the separator widget, or %NULL</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_swipe_to_close"
              c:identifier="adw_flap_set_swipe_to_close"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2443">Sets whether @self can be closed with a swipe gesture.

The area that can be swiped depends on the #AdwFlap:transition-type value.</doc>
        <source-position filename="../src/adw-flap.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2445">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="swipe_to_close" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2446">Whether @self can be closed with a swipe gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_swipe_to_open"
              c:identifier="adw_flap_set_swipe_to_open"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2396">Sets whether @self can be opened with a swipe gesture.

The area that can be swiped depends on the #AdwFlap:transition-type value.</doc>
        <source-position filename="../src/adw-flap.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2398">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="swipe_to_open" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2399">Whether @self can be opened with a swipe gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="adw_flap_set_transition_type"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="2290">Sets the type of animation that will be used for reveal and fold transitions
in @self.

#AdwFlap:flap is transparent by default, which means the content will be seen
through it with %ADW_FLAP_TRANSITION_TYPE_OVER transitions; add the
.background style class to it if this is unwanted.</doc>
        <source-position filename="../src/adw-flap.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2292">a #AdwFlap</doc>
            <type name="Flap" c:type="AdwFlap*"/>
          </instance-parameter>
          <parameter name="transition_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-flap.c"
                 line="2293">the new transition type</doc>
            <type name="FlapTransitionType" c:type="AdwFlapTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <property name="content"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1283">The content widget, always displayed when unfolded, and partially visible
when folded.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="flap"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1298">The flap widget, only visible when #AdwFlap:reveal-progress is greater than
0.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="flap-position"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1329">The flap position for @self. If @GTK_PACK_START, the flap is displayed
before the content, if @GTK_PACK_END, it's displayed after the content.</doc>
        <type name="Gtk.PackType"/>
      </property>
      <property name="fold-duration"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1405">The fold transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="fold-policy"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1389">The current fold policy. See #AdwFlapFoldPolicy for available
policies.</doc>
        <type name="FlapFoldPolicy"/>
      </property>
      <property name="folded" version="1.1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1420">Whether the flap is currently folded.

See #AdwFlap:fold-policy.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="locked"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1436">Whether the flap is locked.

If %FALSE, folding when the flap is revealed automatically closes it, and
unfolding it when the flap is not revealed opens it. If %TRUE,
#AdwFlap:reveal-flap value never changes on its own.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="modal"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1474">Whether the flap is modal.

If %TRUE, clicking the content widget while flap is revealed, as well as
pressing Escape key, will close the flap. If %FALSE, clicks are passed
through to the content widget.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="reveal-duration"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1359">The reveal transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="reveal-flap"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1345">Whether the flap widget is revealed.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="reveal-progress" version="1.1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1374">The current reveal transition progress. 0 means fully hidden, 1 means fully
revealed See #AdwFlap:reveal-flap.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="separator"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1313">The separator widget, displayed between content and flap when there's no
shadow to display. When exactly it's visible depends on the
#AdwFlap:transition-type value. If %NULL, no separator will be used.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="swipe-to-close"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1508">Whether the flap can be closed with a swipe gesture.

The area that can be swiped depends on the #AdwFlap:transition-type value.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="swipe-to-open"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1492">Whether the flap can be opened with a swipe gesture.

The area that can be swiped depends on the #AdwFlap:transition-type value.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-type"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="1454">The type of animation that will be used for reveal and fold transitions
in @self.

#AdwFlap:flap is transparent by default, which means the content will be
seen through it with %ADW_FLAP_TRANSITION_TYPE_OVER transitions; add the
.background style class to it if this is unwanted.</doc>
        <type name="FlapTransitionType"/>
      </property>
    </class>
    <record name="FlapClass"
            c:type="AdwFlapClass"
            glib:is-gtype-struct-for="Flap">
      <source-position filename="../src/adw-flap.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <enumeration name="FlapFoldPolicy"
                 version="1.1"
                 glib:type-name="AdwFlapFoldPolicy"
                 glib:get-type="adw_flap_fold_policy_get_type"
                 c:type="AdwFlapFoldPolicy">
      <doc xml:space="preserve"
           filename="../src/adw-flap.c"
           line="70">These enumeration values describe the possible folding behavior in a #AdwFlap
widget.</doc>
      <member name="never"
              value="0"
              c:identifier="ADW_FLAP_FOLD_POLICY_NEVER"
              glib:nick="never">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="72">Disable folding, the flap cannot reach narrow
  sizes.</doc>
      </member>
      <member name="always"
              value="1"
              c:identifier="ADW_FLAP_FOLD_POLICY_ALWAYS"
              glib:nick="always">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="74">Keep the flap always folded.</doc>
      </member>
      <member name="auto"
              value="2"
              c:identifier="ADW_FLAP_FOLD_POLICY_AUTO"
              glib:nick="auto">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="75">Fold and unfold the flap based on available
  space.</doc>
      </member>
    </enumeration>
    <enumeration name="FlapTransitionType"
                 version="1.1"
                 glib:type-name="AdwFlapTransitionType"
                 glib:get-type="adw_flap_transition_type_get_type"
                 c:type="AdwFlapTransitionType">
      <doc xml:space="preserve"
           filename="../src/adw-flap.c"
           line="84">These enumeration values describe the possible transitions between children
in a #AdwFlap widget, as well as which areas can be swiped via
#AdwFlap:swipe-to-open and #AdwFlap:swipe-to-close.

New values may be added to this enum over time.</doc>
      <member name="over"
              value="0"
              c:identifier="ADW_FLAP_TRANSITION_TYPE_OVER"
              glib:nick="over">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="86">The flap slides over the content, which is
  dimmed. When folded, only the flap can be swiped.</doc>
      </member>
      <member name="under"
              value="1"
              c:identifier="ADW_FLAP_TRANSITION_TYPE_UNDER"
              glib:nick="under">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="88">The content slides over the flap. Only the
  content can be swiped.</doc>
      </member>
      <member name="slide"
              value="2"
              c:identifier="ADW_FLAP_TRANSITION_TYPE_SLIDE"
              glib:nick="slide">
        <doc xml:space="preserve"
             filename="../src/adw-flap.c"
             line="90">The flap slides offscreen when hidden,
  neither the flap nor content overlap each other. Both widgets can be
  swiped.</doc>
      </member>
    </enumeration>
    <class name="HeaderBar"
           c:symbol-prefix="header_bar"
           c:type="AdwHeaderBar"
           parent="Gtk.Widget"
           glib:type-name="AdwHeaderBar"
           glib:get-type="adw_header_bar_get_type"
           glib:type-struct="HeaderBarClass">
      <source-position filename="../src/adw-header-bar.h" line="37"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_header_bar_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="487">Creates a new #AdwHeaderBar widget.</doc>
        <source-position filename="../src/adw-header-bar.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-bar.c"
               line="492">a new #AdwHeaderBar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_centering_policy"
              c:identifier="adw_header_bar_get_centering_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="785">Gets the policy @self follows to horizontally align its center widget.</doc>
        <source-position filename="../src/adw-header-bar.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-bar.c"
               line="791">the centering policy</doc>
          <type name="CenteringPolicy" c:type="AdwCenteringPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="787">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_decoration_layout"
              c:identifier="adw_header_bar_get_decoration_layout"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="766">Gets the decoration layout set with
adw_header_bar_set_decoration_layout().</doc>
        <source-position filename="../src/adw-header-bar.h" line="76"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-header-bar.c"
               line="773">the decoration layout</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="768">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_end_title_buttons"
              c:identifier="adw_header_bar_get_show_end_title_buttons"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="680">Returns whether this header bar shows the standard window
title buttons.</doc>
        <source-position filename="../src/adw-header-bar.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-bar.c"
               line="687">%TRUE if title buttons are shown</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="682">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_start_title_buttons"
              c:identifier="adw_header_bar_get_show_start_title_buttons"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="630">Returns whether this header bar shows the standard window
title buttons.</doc>
        <source-position filename="../src/adw-header-bar.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-bar.c"
               line="637">%TRUE if title buttons are shown</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="632">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title_widget"
              c:identifier="adw_header_bar_get_title_widget"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="582">Retrieves the title widget widget of the header. See
adw_header_bar_set_title_widget().</doc>
        <source-position filename="../src/adw-header-bar.h" line="48"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-header-bar.c"
               line="589">the title widget
   of the header, or %NULL if none has been set explicitly.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="584">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pack_end"
              c:identifier="adw_header_bar_pack_end"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="519">Adds @child to @self, packed with reference to the
end of the @self.</doc>
        <source-position filename="../src/adw-header-bar.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="521">A #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="522">the #GtkWidget to be added to @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_start"
              c:identifier="adw_header_bar_pack_start"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="502">Adds @child to @self, packed with reference to the
start of the @self.</doc>
        <source-position filename="../src/adw-header-bar.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="504">A #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="505">the #GtkWidget to be added to @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_header_bar_remove">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="602">Removes a child from @self, after it has been added
with adw_header_bar_pack_start(), adw_header_bar_pack_end()
or adw_header_bar_set_title_widget().</doc>
        <source-position filename="../src/adw-header-bar.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="604">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="605">the child to remove</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_centering_policy"
              c:identifier="adw_header_bar_set_centering_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="803">Sets the policy @self must follow to horizontally align its center widget.</doc>
        <source-position filename="../src/adw-header-bar.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="805">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="centering_policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="806">the centering policy</doc>
            <type name="CenteringPolicy" c:type="AdwCenteringPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_decoration_layout"
              c:identifier="adw_header_bar_set_decoration_layout"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="730">Sets the decoration layout for this header bar, overriding
the #GtkSettings:gtk-decoration-layout setting.

There can be valid reasons for overriding the setting, such
as a header bar design that does not allow for buttons to take
room on the right, or only offers room for a single close button.
Split header bars are another example for overriding the
setting.

The format of the string is button names, separated by commas.
A colon separates the buttons that should appear on the left
from those on the right. Recognized button names are minimize,
maximize, close and icon (the window icon).

For example, “icon:minimize,maximize,close” specifies an icon
on the left, and minimize, maximize and close buttons on the right.</doc>
        <source-position filename="../src/adw-header-bar.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="732">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="layout"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="733">a decoration layout, or %NULL to unset the layout</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_end_title_buttons"
              c:identifier="adw_header_bar_set_show_end_title_buttons"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="699">Sets whether this header bar shows the standard window title buttons
including close, maximize, and minimize.</doc>
        <source-position filename="../src/adw-header-bar.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="701">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="702">%TRUE to show standard title buttons</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_start_title_buttons"
              c:identifier="adw_header_bar_set_show_start_title_buttons"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="649">Sets whether this header bar shows the standard window title buttons
including close, maximize, and minimize.</doc>
        <source-position filename="../src/adw-header-bar.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="651">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="652">%TRUE to show standard title buttons</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title_widget"
              c:identifier="adw_header_bar_set_title_widget"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="536">Sets the title for the #AdwHeaderBar.

When set to %NULL, the headerbar will display the title of the window it is
contained in.

The title should help a user identify the current view. To achieve the same
style as the builtin title, use the “title” style class.

You should set the title widget to %NULL, for the window title label to be
visible again.</doc>
        <source-position filename="../src/adw-header-bar.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="538">a #AdwHeaderBar</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </instance-parameter>
          <parameter name="title_widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-header-bar.c"
                 line="539">a widget to use for a title</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <property name="centering-policy" writable="1" transfer-ownership="none">
        <type name="CenteringPolicy"/>
      </property>
      <property name="decoration-layout"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="400">The decoration layout for buttons. If this property is
not set, the #GtkSettings:gtk-decoration-layout setting
is used.

See adw_header_bar_set_decoration_layout() for information
about the format of this string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-end-title-buttons"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="381">Whether to show title buttons like close, minimize, maximize.

Which buttons are actually shown and where is determined
by the #AdwHeaderBar:decoration-layout property, and by
the state of the window (e.g. a close button will not be
shown if the window can't be closed).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-start-title-buttons"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-header-bar.c"
             line="362">Whether to show title buttons like close, minimize, maximize.

Which buttons are actually shown and where is determined
by the #AdwHeaderBar:decoration-layout property, and by
the state of the window (e.g. a close button will not be
shown if the window can't be closed).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="title-widget" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
    </class>
    <record name="HeaderBarClass"
            c:type="AdwHeaderBarClass"
            glib:is-gtype-struct-for="HeaderBar">
      <source-position filename="../src/adw-header-bar.h" line="37"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="HeaderGroup"
           c:symbol-prefix="header_group"
           c:type="AdwHeaderGroup"
           parent="GObject.Object"
           glib:type-name="AdwHeaderGroup"
           glib:get-type="adw_header_group_get_type"
           glib:type-struct="HeaderGroupClass">
      <source-position filename="../src/adw-header-group.h" line="28"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="adw_header_group_new">
        <source-position filename="../src/adw-header-group.h" line="47"/>
        <return-value transfer-ownership="full">
          <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
        </return-value>
      </constructor>
      <method name="add_gtk_header_bar"
              c:identifier="adw_header_group_add_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="450">Adds @header_bar to @self.
When the widget is destroyed or no longer referenced elsewhere, it will
be removed from the header group.</doc>
        <source-position filename="../src/adw-header-group.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="452">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="453">the #GtkHeaderBar to add</doc>
            <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_header_bar"
              c:identifier="adw_header_group_add_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="425">Adds @header_bar to @self.
When the widget is destroyed or no longer referenced elsewhere, it will
be removed from the header group.</doc>
        <source-position filename="../src/adw-header-group.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="427">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="428">the #AdwHeaderBar to add</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_header_group"
              c:identifier="adw_header_group_add_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="475">Adds @header_group to @self.
When the nested group is no longer referenced elsewhere, it will be removed
from the header group.</doc>
        <source-position filename="../src/adw-header-group.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="477">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="478">the #AdwHeaderGroup to add</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="adw_header_group_get_children"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="945">Returns the list of children associated with @self.</doc>
        <source-position filename="../src/adw-header-group.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-group.c"
               line="951">the #GSList of
  children. The list is owned by libadwaita and should not be modified.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="HeaderGroupChild"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="947">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_decorate_all"
              c:identifier="adw_header_group_get_decorate_all"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="1098">Gets whether the elements of the group should all receive the full decoration.</doc>
        <source-position filename="../src/adw-header-group.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-group.c"
               line="1104">%TRUE if the elements of the group should all receive the full
  decoration, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1100">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_child"
              c:identifier="adw_header_group_remove_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="1051">Removes @child from @self.</doc>
        <source-position filename="../src/adw-header-group.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1053">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1054">the #AdwHeaderGroupChild to remove</doc>
            <type name="HeaderGroupChild" c:type="AdwHeaderGroupChild*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_gtk_header_bar"
              c:identifier="adw_header_group_remove_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="1001">Removes @header_bar from @self.</doc>
        <source-position filename="../src/adw-header-group.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1003">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1004">the #GtkHeaderBar to remove</doc>
            <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_header_bar"
              c:identifier="adw_header_group_remove_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="976">Removes @header_bar from @self.</doc>
        <source-position filename="../src/adw-header-group.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="978">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="979">the #AdwHeaderBar to remove</doc>
            <type name="HeaderBar" c:type="AdwHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_header_group"
              c:identifier="adw_header_group_remove_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="1026">Removes a nested #AdwHeaderGroup from a #AdwHeaderGroup</doc>
        <source-position filename="../src/adw-header-group.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1028">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1029">the #AdwHeaderGroup to remove</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_decorate_all"
              c:identifier="adw_header_group_set_decorate_all"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="1071">Sets whether the elements of the group should all receive the full decoration.</doc>
        <source-position filename="../src/adw-header-group.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1073">a #AdwHeaderGroup</doc>
            <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
          </instance-parameter>
          <parameter name="decorate_all" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="1074">whether the elements of the group should all receive the full decoration</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="decorate-all"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="815">Whether the elements of the group should all receive the full decoration.
This is useful in conjunction with #AdwLeaflet:folded when the leaflet
contains the header bars of the group, as you want them all to display the
complete decoration when the leaflet is folded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <glib:signal name="update-decoration-layouts" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="834">This signal is emitted before updating the decoration layouts.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <class name="HeaderGroupChild"
           c:symbol-prefix="header_group_child"
           c:type="AdwHeaderGroupChild"
           parent="GObject.Object"
           glib:type-name="AdwHeaderGroupChild"
           glib:get-type="adw_header_group_child_get_type"
           glib:type-struct="HeaderGroupChildClass">
      <source-position filename="../src/adw-header-group.h" line="23"/>
      <method name="get_child_type"
              c:identifier="adw_header_group_child_get_child_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="927">Gets the child type.</doc>
        <source-position filename="../src/adw-header-group.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-group.c"
               line="933">the child type.</doc>
          <type name="HeaderGroupChildType" c:type="AdwHeaderGroupChildType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="929">a #AdwHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="AdwHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gtk_header_bar"
              c:identifier="adw_header_group_child_get_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="887">Gets the child #GtkHeaderBar.
Use adw_header_group_child_get_child_type() to check the child type.</doc>
        <source-position filename="../src/adw-header-group.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-group.c"
               line="894">the child #GtkHeaderBar, or %NULL in case of error.</doc>
          <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="889">a #AdwHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="AdwHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_bar"
              c:identifier="adw_header_group_child_get_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="867">Gets the child #AdwHeaderBar.
Use adw_header_group_child_get_child_type() to check the child type.</doc>
        <source-position filename="../src/adw-header-group.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-group.c"
               line="874">the child #AdwHeaderBar, or %NULL in case of error.</doc>
          <type name="HeaderBar" c:type="AdwHeaderBar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="869">a #AdwHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="AdwHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_group"
              c:identifier="adw_header_group_child_get_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="907">Gets the child #AdwHeaderGroup.
Use adw_header_group_child_get_child_type() to check the child type.</doc>
        <source-position filename="../src/adw-header-group.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-header-group.c"
               line="914">the child #AdwHeaderGroup, or %NULL in case of error.</doc>
          <type name="HeaderGroup" c:type="AdwHeaderGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-header-group.c"
                 line="909">a #AdwHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="AdwHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="HeaderGroupChildClass"
            c:type="AdwHeaderGroupChildClass"
            glib:is-gtype-struct-for="HeaderGroupChild">
      <source-position filename="../src/adw-header-group.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="HeaderGroupChildType"
                 version="1.0"
                 glib:type-name="AdwHeaderGroupChildType"
                 glib:get-type="adw_header_group_child_type_get_type"
                 c:type="AdwHeaderGroupChildType">
      <doc xml:space="preserve"
           filename="../src/adw-header-group.c"
           line="50">This enumeration value describes the child types handled by #AdwHeaderGroup.

New values may be added to this enumeration over time.</doc>
      <member name="header_bar"
              value="0"
              c:identifier="ADW_HEADER_GROUP_CHILD_TYPE_HEADER_BAR"
              glib:nick="header-bar">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="52">The child is a #AdwHeaderBar</doc>
      </member>
      <member name="gtk_header_bar"
              value="1"
              c:identifier="ADW_HEADER_GROUP_CHILD_TYPE_GTK_HEADER_BAR"
              glib:nick="gtk-header-bar">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="53">The child is a #GtkHeaderBar</doc>
      </member>
      <member name="header_group"
              value="2"
              c:identifier="ADW_HEADER_GROUP_CHILD_TYPE_HEADER_GROUP"
              glib:nick="header-group">
        <doc xml:space="preserve"
             filename="../src/adw-header-group.c"
             line="54">The child is a #AdwHeaderGroup</doc>
      </member>
    </enumeration>
    <record name="HeaderGroupClass"
            c:type="AdwHeaderGroupClass"
            glib:is-gtype-struct-for="HeaderGroup">
      <source-position filename="../src/adw-header-group.h" line="28"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Keypad"
           c:symbol-prefix="keypad"
           c:type="AdwKeypad"
           parent="Gtk.Widget"
           glib:type-name="AdwKeypad"
           glib:get-type="adw_keypad_get_type"
           glib:type-struct="KeypadClass">
      <source-position filename="../src/adw-keypad.h" line="22"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new" c:identifier="adw_keypad_new" version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="382">Create a new #AdwKeypad widget.</doc>
        <source-position filename="../src/adw-keypad.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="389">the newly created #AdwKeypad widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="symbols_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="384">whether the hash, plus, and asterisk symbols should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="letters_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="385">whether the letters below the digits should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_column_spacing"
              c:identifier="adw_keypad_get_column_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="472">Returns the amount of space between the columns of @self.</doc>
        <source-position filename="../src/adw-keypad.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="478">the column spacing of @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="474">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_end_action"
              c:identifier="adw_keypad_get_end_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="735">Returns the widget for the lower right corner (or left, in RTL locales) of
@self.</doc>
        <source-position filename="../src/adw-keypad.h" line="61"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="742">the end action widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="737">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry"
              c:identifier="adw_keypad_get_entry"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="628">Get the connected entry. See adw_keypad_set_entry() for details.</doc>
        <source-position filename="../src/adw-keypad.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="634">the set #GtkEntry or %NULL if no widget was set</doc>
          <type name="Gtk.Entry" c:type="GtkEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="630">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_letters_visible"
              c:identifier="adw_keypad_get_letters_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="518">Returns whether @self should display the standard letters below the digits on
its buttons.</doc>
        <source-position filename="../src/adw-keypad.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="525">whether the letters below the digits should be visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="520">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_spacing"
              c:identifier="adw_keypad_get_row_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="428">Returns the amount of space between the rows of @self.</doc>
        <source-position filename="../src/adw-keypad.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="434">the row spacing of @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="430">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_action"
              c:identifier="adw_keypad_get_start_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="681">Returns the widget for the lower left corner (or right, in RTL locales) of
@self.</doc>
        <source-position filename="../src/adw-keypad.h" line="56"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="688">the start action widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="683">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_symbols_visible"
              c:identifier="adw_keypad_get_symbols_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="565">Returns whether @self should display the standard letters below the digits on
its buttons.

Returns Whether @self should display the hash and asterisk buttons, and
should display the plus symbol at the bottom of its 0 button.</doc>
        <source-position filename="../src/adw-keypad.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-keypad.c"
               line="575">whether the hash, plus, and asterisk symbols should be visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="567">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_column_spacing"
              c:identifier="adw_keypad_set_column_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="447">Sets the amount of space between columns of @self.</doc>
        <source-position filename="../src/adw-keypad.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="449">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="450">the amount of space to insert between columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_end_action"
              c:identifier="adw_keypad_set_end_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="701">Sets the widget for the lower right corner (or left, in RTL locales) of
@self.</doc>
        <source-position filename="../src/adw-keypad.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="703">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
          <parameter name="end_action"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="704">the end action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_entry"
              c:identifier="adw_keypad_set_entry"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="588">Binds @entry to @self and blocks any input which wouldn't be possible to type
with with the keypad.</doc>
        <source-position filename="../src/adw-keypad.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="590">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
          <parameter name="entry"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="591">a #GtkEntry</doc>
            <type name="Gtk.Entry" c:type="GtkEntry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_letters_visible"
              c:identifier="adw_keypad_set_letters_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="491">Sets whether @self should display the standard letters below the digits on
its buttons.</doc>
        <source-position filename="../src/adw-keypad.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="493">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
          <parameter name="letters_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="494">whether the letters below the digits should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_spacing"
              c:identifier="adw_keypad_set_row_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="403">Sets the amount of space between rows of @self.</doc>
        <source-position filename="../src/adw-keypad.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="405">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="406">the amount of space to insert between rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_action"
              c:identifier="adw_keypad_set_start_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="647">Sets the widget for the lower left corner (or right, in RTL locales) of
@self.</doc>
        <source-position filename="../src/adw-keypad.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="649">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
          <parameter name="start_action"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="650">the start action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_symbols_visible"
              c:identifier="adw_keypad_set_symbols_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="538">Sets whether @self should display the hash and asterisk buttons, and should
display the plus symbol at the bottom of its 0 button.</doc>
        <source-position filename="../src/adw-keypad.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="540">a #AdwKeypad</doc>
            <type name="Keypad" c:type="AdwKeypad*"/>
          </instance-parameter>
          <parameter name="symbols_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-keypad.c"
                 line="541">whether the hash, plus, and asterisk symbols should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="column-spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="264">The amount of space between two consecutive columns.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="end-action"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="323">The widget for the lower end corner of @self.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="entry"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="308">The entry widget connected to the keypad. See adw_keypad_set_entry() for
details.</doc>
        <type name="Gtk.Entry"/>
      </property>
      <property name="letters-visible"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="278">Whether the keypad should display the standard letters below the digits on
its buttons.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="row-spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="250">The amount of space between two consecutive rows.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="start-action"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="337">The widget for the lower start corner of @self.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="symbols-visible"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-keypad.c"
             line="293">Whether the keypad should display the hash and asterisk buttons, and should
display the plus symbol at the bottom of its 0 button.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="KeypadClass"
            c:type="AdwKeypadClass"
            glib:is-gtype-struct-for="Keypad">
      <source-position filename="../src/adw-keypad.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="Leaflet"
           c:symbol-prefix="leaflet"
           c:type="AdwLeaflet"
           parent="Gtk.Widget"
           glib:type-name="AdwLeaflet"
           glib:get-type="adw_leaflet_get_type"
           glib:type-struct="LeafletClass">
      <source-position filename="../src/adw-leaflet.h" line="44"/>
      <implements name="Swipeable"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="adw_leaflet_new">
        <source-position filename="../src/adw-leaflet.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="append" c:identifier="adw_leaflet_append">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2820">Adds a child to @self.</doc>
        <source-position filename="../src/adw-leaflet.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="2827">the #AdwLeafletPage for @child</doc>
          <type name="LeafletPage" c:type="AdwLeafletPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2822">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2823">the widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_adjacent_child"
              c:identifier="adw_leaflet_get_adjacent_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3491">Gets the previous or next child that doesn't have 'navigatable' child
property set to %FALSE, or %NULL if it doesn't exist. This will be the same
widget adw_leaflet_navigate() will navigate to.</doc>
        <source-position filename="../src/adw-leaflet.h" line="135"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3500">the previous or next child, or
  %NULL if it doesn't exist.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3493">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3494">the direction</doc>
            <type name="NavigationDirection" c:type="AdwNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="adw_leaflet_get_can_swipe_back"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3428">Returns whether the #AdwLeaflet allows swiping to the previous child.</doc>
        <source-position filename="../src/adw-leaflet.h" line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3434">%TRUE if back swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3430">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_forward"
              c:identifier="adw_leaflet_get_can_swipe_forward"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3473">Returns whether the #AdwLeaflet allows swiping to the next child.</doc>
        <source-position filename="../src/adw-leaflet.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3479">%TRUE if forward swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3475">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_unfold" c:identifier="adw_leaflet_get_can_unfold">
        <source-position filename="../src/adw-leaflet.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_by_name"
              c:identifier="adw_leaflet_get_child_by_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3549">Finds the child of @self with the name given as the argument. Returns %NULL
if there is no child with this name.</doc>
        <source-position filename="../src/adw-leaflet.h" line="142"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3557">the requested child of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3551">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3552">the name of the child to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_transition_duration"
              c:identifier="adw_leaflet_get_child_transition_duration">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3207">Returns the amount of time (in milliseconds) that
transitions between children in @self will take.</doc>
        <source-position filename="../src/adw-leaflet.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3214">the child transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3209">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_transition_running"
              c:identifier="adw_leaflet_get_child_transition_running">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3340">Returns whether @self is currently in a transition from one page to
another.</doc>
        <source-position filename="../src/adw-leaflet.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3347">%TRUE if the transition is currently running, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3342">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folded" c:identifier="adw_leaflet_get_folded">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3034">Gets whether @self is folded.</doc>
        <source-position filename="../src/adw-leaflet.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3040">whether @self is folded.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3036">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="adw_leaflet_get_homogeneous">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3085">Gets whether @self is homogeneous for the given fold and orientation.
See adw_leaflet_set_homogeneous().</doc>
        <source-position filename="../src/adw-leaflet.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3094">whether @self is homogeneous for the given fold and orientation.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3087">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="folded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3088">the fold</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3089">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="adw_leaflet_get_interpolate_size">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3384">Returns whether the #AdwLeaflet is set up to interpolate between
the sizes of children on page switch.</doc>
        <source-position filename="../src/adw-leaflet.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3391">%TRUE if child sizes are interpolated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3386">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode_transition_duration"
              c:identifier="adw_leaflet_get_mode_transition_duration">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3168">Returns the amount of time (in milliseconds) that
transitions between modes in @self will take.</doc>
        <source-position filename="../src/adw-leaflet.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3175">the mode transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3170">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page" c:identifier="adw_leaflet_get_page">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3015">Returns the #AdwLeafletPage object for @child.</doc>
        <source-position filename="../src/adw-leaflet.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3022">the #AdwLeafletPage for @child</doc>
          <type name="LeafletPage" c:type="AdwLeafletPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3017">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3018">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pages" c:identifier="adw_leaflet_get_pages">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3601">Returns a #GListModel that contains the pages of the leaflet, and can be
used to keep an up-to-date view. The model also implements #GtkSelectionModel
and can be used to track the visible page.</doc>
        <source-position filename="../src/adw-leaflet.h" line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3609">a #GtkSelectionModel for the leaflet's children</doc>
          <type name="Gtk.SelectionModel" c:type="GtkSelectionModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3603">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="adw_leaflet_get_transition_type"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3108">Gets the type of animation that will be used
for transitions between modes and children in @self.</doc>
        <source-position filename="../src/adw-leaflet.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3115">the current transition type of @self</doc>
          <type name="LeafletTransitionType"
                c:type="AdwLeafletTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3110">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="adw_leaflet_get_visible_child">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3246">Gets the visible child widget.</doc>
        <source-position filename="../src/adw-leaflet.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3252">the visible child widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3248">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child_name"
              c:identifier="adw_leaflet_get_visible_child_name">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3294">Gets the name of the currently visible child widget.</doc>
        <source-position filename="../src/adw-leaflet.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3300">the name of the visible child</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3296">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_child_after"
              c:identifier="adw_leaflet_insert_child_after"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2869">Inserts @child in the position after @sibling in the list of children.
If @sibling is %NULL, insert @child at the first position.</doc>
        <source-position filename="../src/adw-leaflet.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="2878">the #AdwLeafletPage for @child</doc>
          <type name="LeafletPage" c:type="AdwLeafletPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2871">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2872">the #GtkWidget to insert</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2873">the sibling after which to insert @child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="navigate"
              c:identifier="adw_leaflet_navigate"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3518">Switches to the previous or next child that doesn't have 'navigatable' child
property set to %FALSE, similar to performing a swipe gesture to go in
@direction.</doc>
        <source-position filename="../src/adw-leaflet.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="3527">%TRUE if visible child was changed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3520">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3521">the direction</doc>
            <type name="NavigationDirection" c:type="AdwNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend" c:identifier="adw_leaflet_prepend" version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2847">Inserts @child at the first position in @self.</doc>
        <source-position filename="../src/adw-leaflet.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="2854">the #AdwLeafletPage for @child</doc>
          <type name="LeafletPage" c:type="AdwLeafletPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2849">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2850">the #GtkWidget to prepend</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_leaflet_remove">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2984">Removes a child widget from @self.</doc>
        <source-position filename="../src/adw-leaflet.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2986">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2987">the child to remove</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_child_after"
              c:identifier="adw_leaflet_reorder_child_after"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2907">Moves @child to the position after @sibling in the list of children.
If @sibling is %NULL, move @child to the first position.</doc>
        <source-position filename="../src/adw-leaflet.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2909">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2910">the #GtkWidget to move, must be a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2911">the sibling to move @child after, or %NULL</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="adw_leaflet_set_can_swipe_back"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3401">Sets whether or not @self allows switching to the previous child that has
'navigatable' child property set to %TRUE via a swipe gesture</doc>
        <source-position filename="../src/adw-leaflet.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3403">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3404">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_forward"
              c:identifier="adw_leaflet_set_can_swipe_forward"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3446">Sets whether or not @self allows switching to the next child that has
'navigatable' child property set to %TRUE via a swipe gesture.</doc>
        <source-position filename="../src/adw-leaflet.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3448">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="can_swipe_forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3449">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_unfold" c:identifier="adw_leaflet_set_can_unfold">
        <source-position filename="../src/adw-leaflet.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="can_unfold" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_transition_duration"
              c:identifier="adw_leaflet_set_child_transition_duration">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3224">Sets the duration that transitions between children in @self
will take.</doc>
        <source-position filename="../src/adw-leaflet.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3226">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3227">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="adw_leaflet_set_homogeneous">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3050">Sets the #AdwLeaflet to be homogeneous or not for the given fold and orientation.
If it is homogeneous, the #AdwLeaflet will request the same
width or height for all its children depending on the orientation.
If it isn't and it is folded, the leaflet may change width or height
when a different child becomes visible.</doc>
        <source-position filename="../src/adw-leaflet.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3052">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="folded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3053">the fold</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3054">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3055">%TRUE to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="adw_leaflet_set_interpolate_size">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3358">Sets whether or not @self will interpolate its size when
changing the visible child. If the #AdwLeaflet:interpolate-size
property is set to %TRUE, @self will interpolate its size between
the current one and the one it'll take after changing the
visible child, according to the set transition duration.</doc>
        <source-position filename="../src/adw-leaflet.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3360">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3361">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode_transition_duration"
              c:identifier="adw_leaflet_set_mode_transition_duration">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3185">Sets the duration that transitions between modes in @self
will take.</doc>
        <source-position filename="../src/adw-leaflet.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3187">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3188">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="adw_leaflet_set_transition_type"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3127">Sets the type of animation that will be used for transitions between modes
and children in @self.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the mode or child that is about to
become current.</doc>
        <source-position filename="../src/adw-leaflet.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3129">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3130">the new transition type</doc>
            <type name="LeafletTransitionType"
                  c:type="AdwLeafletTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child"
              c:identifier="adw_leaflet_set_visible_child">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3265">Makes @visible_child visible using a transition determined by
AdwLeaflet:transition-type and AdwLeaflet:child-transition-duration. The
transition can be cancelled by the user, in which case visible child will
change back to the previously visible child.</doc>
        <source-position filename="../src/adw-leaflet.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3267">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="visible_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3268">the new child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child_name"
              c:identifier="adw_leaflet_set_visible_child_name">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="3313">Makes the child with the name @name visible.

See adw_leaflet_set_visible_child() for more details.</doc>
        <source-position filename="../src/adw-leaflet.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3315">a #AdwLeaflet</doc>
            <type name="Leaflet" c:type="AdwLeaflet*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="3316">the name of a child</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="0.0.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2370">Whether or not the leaflet allows switching to the previous child that has
'navigatable' child property set to %TRUE via a swipe gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-swipe-forward"
                version="0.0.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2385">Whether or not the leaflet allows switching to the next child that has
'navigatable' child property set to %TRUE via a swipe gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-unfold" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="child-transition-duration"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="child-transition-running" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="folded" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2246">%TRUE if the leaflet is folded.

The leaflet will be folded if the size allocated to it is smaller than the
sum of the natural size of its children, it will be unfolded otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous-folded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous-unfolded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="mode-transition-duration"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="pages" transfer-ownership="none">
        <type name="Gtk.SelectionModel"/>
      </property>
      <property name="transition-type"
                version="0.0.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2323">The type of animation that will be used for transitions between modes and
children.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the mode or child that is about
to become current.</doc>
        <type name="LeafletTransitionType"/>
      </property>
      <property name="vhomogeneous-folded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="vhomogeneous-unfolded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="visible-child" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="visible-child-name"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="LeafletClass"
            c:type="AdwLeafletClass"
            glib:is-gtype-struct-for="Leaflet">
      <source-position filename="../src/adw-leaflet.h" line="44"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="LeafletPage"
           c:symbol-prefix="leaflet_page"
           c:type="AdwLeafletPage"
           parent="GObject.Object"
           glib:type-name="AdwLeafletPage"
           glib:get-type="adw_leaflet_page_get_type"
           glib:type-struct="LeafletPageClass">
      <source-position filename="../src/adw-leaflet.h" line="24"/>
      <method name="get_child" c:identifier="adw_leaflet_page_get_child">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2677">Returns the leaflet child to which @self belongs.</doc>
        <source-position filename="../src/adw-leaflet.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="2683">the child to which @self belongs</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2679">a #AdwLeafletPage</doc>
            <type name="LeafletPage" c:type="AdwLeafletPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="adw_leaflet_page_get_name">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2693">Returns the current value of the #AdwLeafletPage:name property.</doc>
        <source-position filename="../src/adw-leaflet.h" line="30"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="2699">The value of the #AdwLeafletPage:name property.
  See adw_leaflet_page_set_name() for details on how to set a new value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2695">a #AdwLeafletPage</doc>
            <type name="LeafletPage" c:type="AdwLeafletPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_navigatable"
              c:identifier="adw_leaflet_page_get_navigatable">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2758">Gets whether the child can be navigated to when folded.

See adw_leaflet_page_set_navigatable() and #AdwLeafletPage:navigatable.</doc>
        <source-position filename="../src/adw-leaflet.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-leaflet.c"
               line="2766">%TRUE if @self is enabled, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2760">a #AdwLeafletPage</doc>
            <type name="LeafletPage" c:type="AdwLeafletPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="adw_leaflet_page_set_name">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2710">Sets the new value of the #AdwLeafletPage:name property.
See also adw_leaflet_page_get_name()</doc>
        <source-position filename="../src/adw-leaflet.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2712">a #AdwLeafletPage</doc>
            <type name="LeafletPage" c:type="AdwLeafletPage*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2713">the new value to set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_navigatable"
              c:identifier="adw_leaflet_page_set_navigatable">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="2776">Sets whether the child can be navigated to when folded.
If %FALSE, the child will be ignored by adw_leaflet_get_adjacent_child(),
adw_leaflet_navigate(), and swipe gestures.

This can be used used to prevent switching to widgets like separators.

Sets the new value of the #AdwLeafletPage:navigatable property to
@navigatable.</doc>
        <source-position filename="../src/adw-leaflet.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2778">a #AdwLeafletPage</doc>
            <type name="LeafletPage" c:type="AdwLeafletPage*"/>
          </instance-parameter>
          <parameter name="navigatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-leaflet.c"
                 line="2779">%TRUE if the child can be navigated to when folded</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="child"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="navigatable"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="294">Whether the child can be navigated to when folded.
If %FALSE, the child will be ignored by adw_leaflet_get_adjacent_child(),
adw_leaflet_navigate(), and swipe gestures.

This can be used used to prevent switching to widgets like separators.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="LeafletPageClass"
            c:type="AdwLeafletPageClass"
            glib:is-gtype-struct-for="LeafletPage">
      <source-position filename="../src/adw-leaflet.h" line="24"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="LeafletTransitionType"
                 version="0.0.12"
                 glib:type-name="AdwLeafletTransitionType"
                 glib:get-type="adw_leaflet_transition_type_get_type"
                 c:type="AdwLeafletTransitionType">
      <doc xml:space="preserve"
           filename="../src/adw-leaflet.c"
           line="52">This enumeration value describes the possible transitions between modes and
children in a #AdwLeaflet widget.

New values may be added to this enumeration over time.</doc>
      <member name="over"
              value="0"
              c:identifier="ADW_LEAFLET_TRANSITION_TYPE_OVER"
              glib:nick="over">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="54">Cover the old page or uncover the new page, sliding from or towards the end according to orientation, text direction and children order</doc>
      </member>
      <member name="under"
              value="1"
              c:identifier="ADW_LEAFLET_TRANSITION_TYPE_UNDER"
              glib:nick="under">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="55">Uncover the new page or cover the old page, sliding from or towards the start according to orientation, text direction and children order</doc>
      </member>
      <member name="slide"
              value="2"
              c:identifier="ADW_LEAFLET_TRANSITION_TYPE_SLIDE"
              glib:nick="slide">
        <doc xml:space="preserve"
             filename="../src/adw-leaflet.c"
             line="56">Slide from left, right, up or down according to the orientation, text direction and the children order</doc>
      </member>
    </enumeration>
    <enumeration name="NavigationDirection"
                 version="1.0"
                 glib:type-name="AdwNavigationDirection"
                 glib:get-type="adw_navigation_direction_get_type"
                 c:type="AdwNavigationDirection">
      <doc xml:space="preserve"
           filename="../src/adw-navigation-direction.c"
           line="17">Represents direction of a swipe navigation gesture in #AdwLeaflet.</doc>
      <member name="back"
              value="0"
              c:identifier="ADW_NAVIGATION_DIRECTION_BACK"
              glib:nick="back">
        <doc xml:space="preserve"
             filename="../src/adw-navigation-direction.c"
             line="19">Corresponds to start or top, depending on orientation and text direction</doc>
      </member>
      <member name="forward"
              value="1"
              c:identifier="ADW_NAVIGATION_DIRECTION_FORWARD"
              glib:nick="forward">
        <doc xml:space="preserve"
             filename="../src/adw-navigation-direction.c"
             line="20">Corresponds to end or bottom, depending on orientation and text direction</doc>
      </member>
    </enumeration>
    <class name="PreferencesGroup"
           c:symbol-prefix="preferences_group"
           c:type="AdwPreferencesGroup"
           parent="Gtk.Widget"
           glib:type-name="AdwPreferencesGroup"
           glib:get-type="adw_preferences_group_get_type"
           glib:type-struct="PreferencesGroupClass">
      <source-position filename="../src/adw-preferences-group.h" line="34"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_preferences_group_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-group.c"
             line="260">Creates a new #AdwPreferencesGroup.</doc>
        <source-position filename="../src/adw-preferences-group.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-group.c"
               line="265">a new #AdwPreferencesGroup</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="adw_preferences_group_add">
        <source-position filename="../src/adw-preferences-group.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="adw_preferences_group_get_description"
              version="0.0.10">
        <source-position filename="../src/adw-preferences-group.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-group.c"
               line="330">the description of @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-group.c"
                 line="327">a #AdwPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="adw_preferences_group_get_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-group.c"
             line="275">Gets the title of @self.</doc>
        <source-position filename="../src/adw-preferences-group.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-group.c"
               line="281">the title of @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-group.c"
                 line="277">a #AdwPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_preferences_group_remove">
        <source-position filename="../src/adw-preferences-group.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="adw_preferences_group_set_description"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-group.c"
             line="346">Sets the description for @self.</doc>
        <source-position filename="../src/adw-preferences-group.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-group.c"
                 line="348">a #AdwPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-group.c"
                 line="349">the description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="adw_preferences_group_set_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-group.c"
             line="297">Sets the title for @self.</doc>
        <source-position filename="../src/adw-preferences-group.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-group.c"
                 line="299">a #AdwPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-group.c"
                 line="300">the title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-group.c"
             line="178">The description for this group of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-group.c"
             line="192">The title for this group of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
    </class>
    <record name="PreferencesGroupClass"
            c:type="AdwPreferencesGroupClass"
            glib:is-gtype-struct-for="PreferencesGroup">
      <source-position filename="../src/adw-preferences-group.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-group.h"
             line="26">The parent class</doc>
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesPage"
           c:symbol-prefix="preferences_page"
           c:type="AdwPreferencesPage"
           parent="Gtk.Widget"
           glib:type-name="AdwPreferencesPage"
           glib:get-type="adw_preferences_page_get_type"
           glib:type-struct="PreferencesPageClass">
      <source-position filename="../src/adw-preferences-page.h" line="35"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_preferences_page_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.c"
             line="197">Creates a new #AdwPreferencesPage.</doc>
        <source-position filename="../src/adw-preferences-page.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-page.c"
               line="202">a new #AdwPreferencesPage</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="adw_preferences_page_add">
        <source-position filename="../src/adw-preferences-page.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="adw_preferences_page_get_icon_name"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.c"
             line="212">Gets the icon name for @self, or %NULL.</doc>
        <source-position filename="../src/adw-preferences-page.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-page.c"
               line="218">the icon name for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-page.c"
                 line="214">a #AdwPreferencesPage</doc>
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="adw_preferences_page_get_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.c"
             line="262">Gets the title of @self, or %NULL.</doc>
        <source-position filename="../src/adw-preferences-page.h" line="47"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-page.c"
               line="268">the title of the @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-page.c"
                 line="264">a #AdwPreferencesPage</doc>
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_preferences_page_remove">
        <source-position filename="../src/adw-preferences-page.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="PreferencesGroup" c:type="AdwPreferencesGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="adw_preferences_page_set_icon_name"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.c"
             line="234">Sets the icon name for @self.</doc>
        <source-position filename="../src/adw-preferences-page.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-page.c"
                 line="236">a #AdwPreferencesPage</doc>
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-page.c"
                 line="237">the icon name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="adw_preferences_page_set_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.c"
             line="284">Sets the title of @self.</doc>
        <source-position filename="../src/adw-preferences-page.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-page.c"
                 line="286">a #AdwPreferencesPage</doc>
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-page.c"
                 line="287">the title of the page, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon-name"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.c"
             line="130">The icon name for this page of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.c"
             line="144">The title for this page of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
    </class>
    <record name="PreferencesPageClass"
            c:type="AdwPreferencesPageClass"
            glib:is-gtype-struct-for="PreferencesPage">
      <source-position filename="../src/adw-preferences-page.h" line="35"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-page.h"
             line="27">The parent class</doc>
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesRow"
           c:symbol-prefix="preferences_row"
           c:type="AdwPreferencesRow"
           parent="Gtk.ListBoxRow"
           glib:type-name="AdwPreferencesRow"
           glib:get-type="adw_preferences_row_get_type"
           glib:type-struct="PreferencesRowClass">
      <source-position filename="../src/adw-preferences-row.h" line="34"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_preferences_row_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.c"
             line="143">Creates a new #AdwPreferencesRow.</doc>
        <source-position filename="../src/adw-preferences-row.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-row.c"
               line="148">a new #AdwPreferencesRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_title"
              c:identifier="adw_preferences_row_get_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.c"
             line="158">Gets the title of the preference represented by @self.</doc>
        <source-position filename="../src/adw-preferences-row.h" line="40"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-row.c"
               line="164">the title of the preference represented
         by @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-row.c"
                 line="160">a #AdwPreferencesRow</doc>
            <type name="PreferencesRow" c:type="AdwPreferencesRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="adw_preferences_row_get_use_underline"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.c"
             line="209">Gets whether an embedded underline in the text of the title indicates a
mnemonic. See adw_preferences_row_set_use_underline().</doc>
        <source-position filename="../src/adw-preferences-row.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-row.c"
               line="216">%TRUE if an embedded underline in the title indicates the mnemonic
         accelerator keys.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-row.c"
                 line="211">a #AdwPreferencesRow</doc>
            <type name="PreferencesRow" c:type="AdwPreferencesRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="adw_preferences_row_set_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.c"
             line="181">Sets the title of the preference represented by @self.</doc>
        <source-position filename="../src/adw-preferences-row.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-row.c"
                 line="183">a #AdwPreferencesRow</doc>
            <type name="PreferencesRow" c:type="AdwPreferencesRow*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-row.c"
                 line="184">the title, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="adw_preferences_row_set_use_underline"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.c"
             line="233">If true, an underline in the text of the title indicates the next character
should be used for the mnemonic accelerator key.</doc>
        <source-position filename="../src/adw-preferences-row.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-row.c"
                 line="235">a #AdwPreferencesRow</doc>
            <type name="PreferencesRow" c:type="AdwPreferencesRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-row.c"
                 line="236">%TRUE if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="title"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.c"
             line="106">The title of the preference represented by this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-underline"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.c"
             line="120">Whether an embedded underline in the text of the title indicates a
mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ListBoxRow" c:type="GtkListBoxRow"/>
      </field>
    </class>
    <record name="PreferencesRowClass"
            c:type="AdwPreferencesRowClass"
            glib:is-gtype-struct-for="PreferencesRow">
      <source-position filename="../src/adw-preferences-row.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-row.h"
             line="26">The parent class</doc>
        <type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesWindow"
           c:symbol-prefix="preferences_window"
           c:type="AdwPreferencesWindow"
           parent="Window"
           glib:type-name="AdwPreferencesWindow"
           glib:get-type="adw_preferences_window_get_type"
           glib:type-struct="PreferencesWindowClass">
      <source-position filename="../src/adw-preferences-window.h" line="36"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.Root"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new"
                   c:identifier="adw_preferences_window_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="543">Creates a new #AdwPreferencesWindow.</doc>
        <source-position filename="../src/adw-preferences-window.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-window.c"
               line="548">a new #AdwPreferencesWindow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="adw_preferences_window_add">
        <source-position filename="../src/adw-preferences-window.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_subpage"
              c:identifier="adw_preferences_window_close_subpage"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="705">Closes the current subpage to return back to the preferences, if there is no
presented subpage, this does nothing.</doc>
        <source-position filename="../src/adw-preferences-window.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="707">a #AdwPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="adw_preferences_window_get_can_swipe_back"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="646">Returns whether or not @self allows switching from a subpage to the
preferences via a swipe gesture.</doc>
        <source-position filename="../src/adw-preferences-window.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-window.c"
               line="653">%TRUE if back swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="648">a #AdwPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_enabled"
              c:identifier="adw_preferences_window_get_search_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="558">Gets whether search is enabled for @self.</doc>
        <source-position filename="../src/adw-preferences-window.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-preferences-window.c"
               line="564">whether search is enabled for @self.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="560">a #AdwPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="present_subpage"
              c:identifier="adw_preferences_window_present_subpage"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="669">Sets @subpage as the window's subpage and present it.
The transition can be cancelled by the user, in which case visible child will
change back to the previously visible child.</doc>
        <source-position filename="../src/adw-preferences-window.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="671">a #AdwPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="subpage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="672">the subpage</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_preferences_window_remove">
        <source-position filename="../src/adw-preferences-window.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <type name="PreferencesPage" c:type="AdwPreferencesPage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="adw_preferences_window_set_can_swipe_back"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="616">Sets whether or not @self allows switching from a subpage to the preferences
via a swipe gesture.</doc>
        <source-position filename="../src/adw-preferences-window.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="618">a #AdwPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="619">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_enabled"
              c:identifier="adw_preferences_window_set_search_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="580">Sets whether search is enabled for @self.</doc>
        <source-position filename="../src/adw-preferences-window.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="582">a #AdwPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="AdwPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="search_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-preferences-window.c"
                 line="583">%TRUE to enable search, %FALSE to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="440">Whether or not the window allows closing the subpage via a swipe gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="search-enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.c"
             line="426">Whether search is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Window" c:type="AdwWindow"/>
      </field>
    </class>
    <record name="PreferencesWindowClass"
            c:type="AdwPreferencesWindowClass"
            glib:is-gtype-struct-for="PreferencesWindow">
      <source-position filename="../src/adw-preferences-window.h" line="36"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/adw-preferences-window.h"
             line="28">The parent class</doc>
        <type name="WindowClass" c:type="AdwWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Squeezer"
           c:symbol-prefix="squeezer"
           c:type="AdwSqueezer"
           parent="Gtk.Widget"
           glib:type-name="AdwSqueezer"
           glib:get-type="adw_squeezer_get_type"
           glib:type-struct="SqueezerClass">
      <source-position filename="../src/adw-squeezer.h" line="37"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="adw_squeezer_new">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1242">Creates a new #AdwSqueezer container.</doc>
        <source-position filename="../src/adw-squeezer.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1247">a new #AdwSqueezer</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="adw_squeezer_add">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1255">Adds a child to @self.</doc>
        <source-position filename="../src/adw-squeezer.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1262">the #AdwSqueezerPage for @child</doc>
          <type name="SqueezerPage" c:type="AdwSqueezerPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1257">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1258">the widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="adw_squeezer_get_homogeneous"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1333">Gets whether @self is homogeneous.

See adw_squeezer_set_homogeneous().</doc>
        <source-position filename="../src/adw-squeezer.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1341">%TRUE if @self is homogeneous, %FALSE is not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1335">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="adw_squeezer_get_interpolate_size"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1480">Gets whether @self should interpolate its size on visible child change.

See adw_squeezer_set_interpolate_size().</doc>
        <source-position filename="../src/adw-squeezer.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1488">%TRUE if @self interpolates its size on visible child change, %FALSE if not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1482">A #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page" c:identifier="adw_squeezer_get_page">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1314">Returns the #AdwSqueezerPage object for @child.</doc>
        <source-position filename="../src/adw-squeezer.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1321">the #AdwSqueezerPage for @child</doc>
          <type name="SqueezerPage" c:type="AdwSqueezerPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1316">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1317">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pages" c:identifier="adw_squeezer_get_pages">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1631">Returns a #GListModel that contains the pages of the squeezer, and can be
used to keep an up-to-date view. The model also implements #GtkSelectionModel
and can be used to track the visible page.</doc>
        <source-position filename="../src/adw-squeezer.h" line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1639">a #GtkSelectionModel for the squeezer's children</doc>
          <type name="Gtk.SelectionModel" c:type="GtkSelectionModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1633">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_duration"
              c:identifier="adw_squeezer_get_transition_duration">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1385">Gets the amount of time (in milliseconds) that transitions between children
in @self will take.</doc>
        <source-position filename="../src/adw-squeezer.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1392">the transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1387">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_running"
              c:identifier="adw_squeezer_get_transition_running">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1464">Gets whether @self is currently in a transition from one child to another.</doc>
        <source-position filename="../src/adw-squeezer.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1470">%TRUE if the transition is currently running, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1466">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="adw_squeezer_get_transition_type">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1422">Gets the type of animation that will be used for transitions between children
in @self.</doc>
        <source-position filename="../src/adw-squeezer.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1429">the current transition type of @self</doc>
          <type name="SqueezerTransitionType"
                c:type="AdwSqueezerTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1424">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="adw_squeezer_get_visible_child">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1528">Gets the currently visible child of @self, or %NULL if there are no visible
children.</doc>
        <source-position filename="../src/adw-squeezer.h" line="86"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1535">the visible child of the #AdwSqueezer</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1530">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xalign"
              c:identifier="adw_squeezer_get_xalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1545">Gets the #AdwSqueezer:xalign property for @self.</doc>
        <source-position filename="../src/adw-squeezer.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1551">the xalign property</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1547">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_yalign"
              c:identifier="adw_squeezer_get_yalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1588">Gets the #AdwSqueezer:yalign property for @self.</doc>
        <source-position filename="../src/adw-squeezer.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1594">the yalign property</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1590">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="adw_squeezer_remove">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1283">Removes a child widget from @self.</doc>
        <source-position filename="../src/adw-squeezer.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1285">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1286">the child to remove</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="adw_squeezer_set_homogeneous"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1353">Sets @self to be homogeneous or not. If it is homogeneous, @self will request
the same size for all its children for its opposite orientation, e.g. if
@self is oriented horizontally and is homogeneous, it will request the same
height for all its children. If it isn't, @self may change size when a
different child becomes visible.</doc>
        <source-position filename="../src/adw-squeezer.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1355">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1356">%TRUE to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="adw_squeezer_set_interpolate_size"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1500">Sets whether or not @self will interpolate the size of its opposing
orientation when changing the visible child. If %TRUE, @self will interpolate
its size between the one of the previous visible child and the one of the new
visible child, according to the set transition duration and the orientation,
e.g. if @self is horizontal, it will interpolate the its height.</doc>
        <source-position filename="../src/adw-squeezer.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1502">A #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1503">%TRUE to interpolate the size</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_duration"
              c:identifier="adw_squeezer_set_transition_duration">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1402">Sets the duration that transitions between children in @self will take.</doc>
        <source-position filename="../src/adw-squeezer.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1404">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1405">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="adw_squeezer_set_transition_type">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1439">Sets the type of animation that will be used for transitions between children
in @self. Available types include various kinds of fades and slides.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the child that is about to become
current.</doc>
        <source-position filename="../src/adw-squeezer.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1441">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1442">the new transition type</doc>
            <type name="SqueezerTransitionType"
                  c:type="AdwSqueezerTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_xalign"
              c:identifier="adw_squeezer_set_xalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1563">Sets the #AdwSqueezer:xalign property for @self.</doc>
        <source-position filename="../src/adw-squeezer.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1565">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="xalign" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1566">the new xalign value, between 0 and 1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_yalign"
              c:identifier="adw_squeezer_set_yalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1606">Sets the #AdwSqueezer:yalign property for @self.</doc>
        <source-position filename="../src/adw-squeezer.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1608">a #AdwSqueezer</doc>
            <type name="Squeezer" c:type="AdwSqueezer*"/>
          </instance-parameter>
          <parameter name="yalign" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1609">the new yalign value, between 0 and 1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <property name="homogeneous" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="pages" transfer-ownership="none">
        <type name="Gtk.SelectionModel"/>
      </property>
      <property name="transition-duration"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-running" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-type" writable="1" transfer-ownership="none">
        <type name="SqueezerTransitionType"/>
      </property>
      <property name="visible-child" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="xalign"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1081">The xalign property determines the horizontal alignment of the children
inside the squeezer's size allocation.
Compare this to #GtkWidget:halign, which determines how the squeezer's size
allocation is positioned in the space available for the squeezer.
The range goes from 0 (start) to 1 (end).

This will affect the position of children too wide to fit in the squeezer
as they are fading out.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="yalign"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1103">The yalign property determines the vertical alignment of the children inside
the squeezer's size allocation.
Compare this to #GtkWidget:valign, which determines how the squeezer's size
allocation is positioned in the space available for the squeezer.
The range goes from 0 (top) to 1 (bottom).

This will affect the position of children too tall to fit in the squeezer
as they are fading out.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
    </class>
    <record name="SqueezerClass"
            c:type="AdwSqueezerClass"
            glib:is-gtype-struct-for="Squeezer">
      <source-position filename="../src/adw-squeezer.h" line="37"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="SqueezerPage"
           c:symbol-prefix="squeezer_page"
           c:type="AdwSqueezerPage"
           parent="GObject.Object"
           glib:type-name="AdwSqueezerPage"
           glib:get-type="adw_squeezer_page_get_type"
           glib:type-struct="SqueezerPageClass">
      <source-position filename="../src/adw-squeezer.h" line="23"/>
      <method name="get_child" c:identifier="adw_squeezer_page_get_child">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1169">Returns the squeezer child to which @self belongs.</doc>
        <source-position filename="../src/adw-squeezer.h" line="26"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1175">the child to which @self belongs</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1171">a #AdwSqueezerPage</doc>
            <type name="SqueezerPage" c:type="AdwSqueezerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled" c:identifier="adw_squeezer_page_get_enabled">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1185">Returns whether @self is enabled in its #AdwSqueezer. This is independent
from the #GtkWidget:visible value of its #GtkWidget.

See adw_squeezer_page_set_enabled().</doc>
        <source-position filename="../src/adw-squeezer.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-squeezer.c"
               line="1194">%TRUE if @self is enabled, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1187">a #AdwSqueezerPage</doc>
            <type name="SqueezerPage" c:type="AdwSqueezerPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_enabled" c:identifier="adw_squeezer_page_set_enabled">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="1204">Make the squeezer enable or disable @child. If a child is disabled, it will
be ignored when looking for the child fitting the available size best. This
allows to programmatically and prematurely hide a child even if it fits in
the available space.

This can be used e.g. to ensure a certain child is hidden below a certain
window width, or any other constraint you find suitable.

Sets the new value of the #AdwSqueezerPage:enabled property to @enabled.</doc>
        <source-position filename="../src/adw-squeezer.h" line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1206">a #AdwSqueezerPage</doc>
            <type name="SqueezerPage" c:type="AdwSqueezerPage*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-squeezer.c"
                 line="1207">%TRUE to enable the child, %FALSE to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="child"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="enabled" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="SqueezerPageClass"
            c:type="AdwSqueezerPageClass"
            glib:is-gtype-struct-for="SqueezerPage">
      <source-position filename="../src/adw-squeezer.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="SqueezerTransitionType"
                 glib:type-name="AdwSqueezerTransitionType"
                 glib:get-type="adw_squeezer_transition_type_get_type"
                 c:type="AdwSqueezerTransitionType">
      <doc xml:space="preserve"
           filename="../src/adw-squeezer.c"
           line="43">These enumeration values describe the possible transitions between children
in a #AdwSqueezer widget.</doc>
      <member name="none"
              value="0"
              c:identifier="ADW_SQUEEZER_TRANSITION_TYPE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="45">No transition</doc>
      </member>
      <member name="crossfade"
              value="1"
              c:identifier="ADW_SQUEEZER_TRANSITION_TYPE_CROSSFADE"
              glib:nick="crossfade">
        <doc xml:space="preserve"
             filename="../src/adw-squeezer.c"
             line="46">A cross-fade</doc>
      </member>
    </enumeration>
    <class name="StatusPage"
           c:symbol-prefix="status_page"
           c:type="AdwStatusPage"
           parent="Gtk.Widget"
           glib:type-name="AdwStatusPage"
           glib:get-type="adw_status_page_get_type"
           glib:type-struct="StatusPageClass">
      <source-position filename="../src/adw-status-page.h" line="22"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new" c:identifier="adw_status_page_new" version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="270">Creates a new #AdwStatusPage.</doc>
        <source-position filename="../src/adw-status-page.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-status-page.c"
               line="275">a new #AdwStatusPage</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_child" c:identifier="adw_status_page_get_child">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="412">Gets the child widget of @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="46"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-status-page.c"
               line="418">the child widget of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="414">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="adw_status_page_get_description"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="370">Gets the description for @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="40"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-status-page.c"
               line="376">the description for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="372">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="adw_status_page_get_icon_name"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="285">Gets the icon name for @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="28"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-status-page.c"
               line="291">the icon name for @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="287">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="adw_status_page_get_title"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="328">Gets the title for @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="34"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-status-page.c"
               line="334">the title for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="330">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child" c:identifier="adw_status_page_set_child">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="428">Sets the child widget of @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="430">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
          <parameter name="child"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="431">the child widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="adw_status_page_set_description"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="388">Sets the description for @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="390">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
          <parameter name="description"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="391">the description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="adw_status_page_set_icon_name"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="301">Sets the icon name for @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="303">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="304">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="adw_status_page_set_title"
              version="1.1">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="346">Sets the title for @self.</doc>
        <source-position filename="../src/adw-status-page.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="348">a #AdwStatusPage</doc>
            <type name="StatusPage" c:type="AdwStatusPage*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-status-page.c"
                 line="349">the title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="child" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="description"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="201">The description to be displayed below the title.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon-name"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="173">The name of the icon to be used.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.1"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-status-page.c"
             line="187">The title to be displayed below the icon.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="StatusPageClass"
            c:type="AdwStatusPageClass"
            glib:is-gtype-struct-for="StatusPage">
      <source-position filename="../src/adw-status-page.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="SwipeGroup"
           c:symbol-prefix="swipe_group"
           c:type="AdwSwipeGroup"
           parent="GObject.Object"
           glib:type-name="AdwSwipeGroup"
           glib:get-type="adw_swipe_group_get_type"
           glib:type-struct="SwipeGroupClass">
      <source-position filename="../src/adw-swipe-group.h" line="23"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="adw_swipe_group_new"
                   version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-group.c"
             line="90">Create a new #AdwSwipeGroup object.</doc>
        <source-position filename="../src/adw-swipe-group.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-swipe-group.c"
               line="95">The newly created #AdwSwipeGroup object</doc>
          <type name="SwipeGroup" c:type="AdwSwipeGroup*"/>
        </return-value>
      </constructor>
      <method name="add_swipeable"
              c:identifier="adw_swipe_group_add_swipeable"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-group.c"
             line="212">When the widget is destroyed or no longer referenced elsewhere, it will
be removed from the swipe group.</doc>
        <source-position filename="../src/adw-swipe-group.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-group.c"
                 line="214">a #AdwSwipeGroup</doc>
            <type name="SwipeGroup" c:type="AdwSwipeGroup*"/>
          </instance-parameter>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-group.c"
                 line="215">the #AdwSwipeable to add</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipeables"
              c:identifier="adw_swipe_group_get_swipeables"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-group.c"
             line="278">Returns the list of swipeables associated with @self.</doc>
        <source-position filename="../src/adw-swipe-group.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipe-group.c"
               line="284">a #GSList of
  swipeables. The list is owned by libadwaita and should not be modified.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Swipeable"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-group.c"
                 line="280">a #AdwSwipeGroup</doc>
            <type name="SwipeGroup" c:type="AdwSwipeGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_swipeable"
              c:identifier="adw_swipe_group_remove_swipeable"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-group.c"
             line="248">Removes a widget from a #AdwSwipeGroup.</doc>
        <source-position filename="../src/adw-swipe-group.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-group.c"
                 line="250">a #AdwSwipeGroup</doc>
            <type name="SwipeGroup" c:type="AdwSwipeGroup*"/>
          </instance-parameter>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-group.c"
                 line="251">the #AdwSwipeable to remove</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="SwipeGroupClass"
            c:type="AdwSwipeGroupClass"
            glib:is-gtype-struct-for="SwipeGroup">
      <source-position filename="../src/adw-swipe-group.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SwipeTracker"
           c:symbol-prefix="swipe_tracker"
           c:type="AdwSwipeTracker"
           parent="GObject.Object"
           glib:type-name="AdwSwipeTracker"
           glib:get-type="adw_swipe_tracker_get_type"
           glib:type-struct="SwipeTrackerClass">
      <source-position filename="../src/adw-swipe-tracker.h" line="23"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="adw_swipe_tracker_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="990">Create a new #AdwSwipeTracker object on @widget.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-swipe-tracker.c"
               line="996">the newly created #AdwSwipeTracker object</doc>
          <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
        </return-value>
        <parameters>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="992">a #GtkWidget to add the tracker on</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_allow_mouse_drag"
              c:identifier="adw_swipe_tracker_get_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1121">Get whether @self can be dragged with mouse pointer.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipe-tracker.c"
               line="1127">%TRUE is mouse dragging is allowed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1123">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="adw_swipe_tracker_get_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1028">Get whether @self is enabled. When it's not enabled, no events will be
processed. Generally widgets will want to expose this via a property.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipe-tracker.c"
               line="1035">%TRUE if @self is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1030">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reversed"
              c:identifier="adw_swipe_tracker_get_reversed"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1078">Get whether @self is reversing the swipe direction.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipe-tracker.c"
               line="1084">%TRUE is the direction is reversed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1080">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swipeable"
              c:identifier="adw_swipe_tracker_get_swipeable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1010">Get @self's swipeable widget.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipe-tracker.c"
               line="1016">the swipeable widget</doc>
          <type name="Swipeable" c:type="AdwSwipeable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1012">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_allow_mouse_drag"
              c:identifier="adw_swipe_tracker_set_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1139">Set whether @self can be dragged with mouse pointer. This should usually be
%FALSE.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1141">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
          <parameter name="allow_mouse_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1142">whether to allow mouse dragging</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="adw_swipe_tracker_set_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1047">Set whether @self is enabled. When it's not enabled, no events will be
processed. Usually widgets will want to expose this via a property.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1049">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1050">whether to enable to swipe tracker</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reversed"
              c:identifier="adw_swipe_tracker_set_reversed"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1096">Set whether to reverse the swipe direction. If @self is horizontal,
can be used for supporting RTL text direction.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1098">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
          <parameter name="reversed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1099">whether to reverse the swipe direction</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="shift_position"
              c:identifier="adw_swipe_tracker_shift_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="1167">Move the current progress value by @delta. This can be used to adjust the
current position if snap points move during the gesture.</doc>
        <source-position filename="../src/adw-swipe-tracker.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1169">a #AdwSwipeTracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </instance-parameter>
          <parameter name="delta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="1170">the position delta</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-mouse-drag"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="897">Whether to allow dragging with mouse pointer. This should usually be
%FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="867">Whether the swipe tracker is enabled. When it's not enabled, no events
will be processed. Usually widgets will want to expose this via a property.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="reversed"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="882">Whether to reverse the swipe direction. If the swipe tracker is horizontal,
it can be used for supporting RTL text direction.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="swipeable"
                version="1.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="853">The widget the swipe tracker is attached to. Must not be %NULL.</doc>
        <type name="Swipeable"/>
      </property>
      <glib:signal name="begin-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="918">This signal is emitted when a possible swipe is detected.

The @direction value can be used to restrict the swipe to a certain
direction.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="921">The direction of the swipe</doc>
            <type name="NavigationDirection"/>
          </parameter>
          <parameter name="direct" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="922">%TRUE if the swipe is directly triggered by a gesture,
  %FALSE if it's triggered via a #AdwSwipeGroup</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="end-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="961">This signal is emitted as soon as the gesture has stopped.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="964">Snap-back animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="to" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="965">The progress value to animate to</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="update-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipe-tracker.c"
             line="942">This signal is emitted every time the progress value changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipe-tracker.c"
                 line="945">The current animation progress value</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SwipeTrackerClass"
            c:type="AdwSwipeTrackerClass"
            glib:is-gtype-struct-for="SwipeTracker">
      <source-position filename="../src/adw-swipe-tracker.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="Swipeable"
               c:symbol-prefix="swipeable"
               c:type="AdwSwipeable"
               glib:type-name="AdwSwipeable"
               glib:get-type="adw_swipeable_get_type"
               glib:type-struct="SwipeableInterface">
      <source-position filename="../src/adw-swipeable.h" line="62"/>
      <prerequisite name="Gtk.Widget"/>
      <virtual-method name="get_cancel_progress"
                      invoker="get_cancel_progress"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="207">Gets the progress @self will snap back to after the gesture is canceled.</doc>
        <source-position filename="../src/adw-swipeable.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="213">the cancel progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="209">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_distance" invoker="get_distance" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="133">Gets the swipe distance of @self. This corresponds to how many pixels
1 unit represents.</doc>
        <source-position filename="../src/adw-swipeable.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="140">the swipe distance in pixels</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="135">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_progress" invoker="get_progress" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="184">Gets the current progress of @self</doc>
        <source-position filename="../src/adw-swipeable.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="190">the current progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="186">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_snap_points"
                      invoker="get_snap_points"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="157">Gets the snap points of @self. Each snap point represents a progress value
that is considered acceptable to end the swipe on.</doc>
        <source-position filename="../src/adw-swipeable.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="165">the snap points of
    @self. The array must be freed with g_free().</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="159">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
          <parameter name="n_snap_points"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="160">location to return the number of the snap points</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_swipe_area"
                      invoker="get_swipe_area"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="230">Gets the area @self can start a swipe from for the given direction and
gesture type.
This can be used to restrict swipes to only be possible from a certain area,
for example, to only allow edge swipes, or to have a draggable element and
ignore swipes elsewhere.

Swipe area is only considered for direct swipes (as in, not initiated by
#AdwSwipeGroup).

If not implemented, the default implementation returns the allocation of
@self, allowing swipes from anywhere.</doc>
        <source-position filename="../src/adw-swipeable.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="232">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
          <parameter name="navigation_direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="233">the direction of the swipe</doc>
            <type name="NavigationDirection" c:type="AdwNavigationDirection"/>
          </parameter>
          <parameter name="is_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="234">whether the swipe is caused by a dragging gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="235">a pointer to a #GdkRectangle to store the swipe area</doc>
            <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_swipe_tracker"
                      invoker="get_swipe_tracker"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="110">Gets the #AdwSwipeTracker used by this swipeable widget.</doc>
        <source-position filename="../src/adw-swipeable.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="116">the swipe tracker</doc>
          <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="112">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="switch_child" invoker="switch_child" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="62">See AdwSwipeable::child-switched.</doc>
        <source-position filename="../src/adw-swipeable.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="64">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="65">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="66">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="emit_child_switched"
              c:identifier="adw_swipeable_emit_child_switched"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="87">Emits AdwSwipeable::child-switched signal. This should be called when the
widget switches visible child widget.

@duration can be 0 if the child is switched without animation.</doc>
        <source-position filename="../src/adw-swipeable.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="89">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="90">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="91">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cancel_progress"
              c:identifier="adw_swipeable_get_cancel_progress"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="207">Gets the progress @self will snap back to after the gesture is canceled.</doc>
        <source-position filename="../src/adw-swipeable.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="213">the cancel progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="209">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distance"
              c:identifier="adw_swipeable_get_distance"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="133">Gets the swipe distance of @self. This corresponds to how many pixels
1 unit represents.</doc>
        <source-position filename="../src/adw-swipeable.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="140">the swipe distance in pixels</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="135">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress"
              c:identifier="adw_swipeable_get_progress"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="184">Gets the current progress of @self</doc>
        <source-position filename="../src/adw-swipeable.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="190">the current progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="186">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap_points"
              c:identifier="adw_swipeable_get_snap_points"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="157">Gets the snap points of @self. Each snap point represents a progress value
that is considered acceptable to end the swipe on.</doc>
        <source-position filename="../src/adw-swipeable.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="165">the snap points of
    @self. The array must be freed with g_free().</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="159">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
          <parameter name="n_snap_points"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="160">location to return the number of the snap points</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipe_area"
              c:identifier="adw_swipeable_get_swipe_area"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="230">Gets the area @self can start a swipe from for the given direction and
gesture type.
This can be used to restrict swipes to only be possible from a certain area,
for example, to only allow edge swipes, or to have a draggable element and
ignore swipes elsewhere.

Swipe area is only considered for direct swipes (as in, not initiated by
#AdwSwipeGroup).

If not implemented, the default implementation returns the allocation of
@self, allowing swipes from anywhere.</doc>
        <source-position filename="../src/adw-swipeable.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="232">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
          <parameter name="navigation_direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="233">the direction of the swipe</doc>
            <type name="NavigationDirection" c:type="AdwNavigationDirection"/>
          </parameter>
          <parameter name="is_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="234">whether the swipe is caused by a dragging gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="235">a pointer to a #GdkRectangle to store the swipe area</doc>
            <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipe_tracker"
              c:identifier="adw_swipeable_get_swipe_tracker"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="110">Gets the #AdwSwipeTracker used by this swipeable widget.</doc>
        <source-position filename="../src/adw-swipeable.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-swipeable.c"
               line="116">the swipe tracker</doc>
          <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="112">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="switch_child"
              c:identifier="adw_swipeable_switch_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="62">See AdwSwipeable::child-switched.</doc>
        <source-position filename="../src/adw-swipeable.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="64">a #AdwSwipeable</doc>
            <type name="Swipeable" c:type="AdwSwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="65">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="66">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="child-switched" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.c"
             line="37">This signal should be emitted when the widget's visible child is changed.

@duration can be 0 if the child is switched without animation.

This is used by #AdwSwipeGroup, applications should not connect to it.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="40">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="41">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="SwipeableInterface"
            c:type="AdwSwipeableInterface"
            glib:is-gtype-struct-for="Swipeable"
            version="1.0">
      <doc xml:space="preserve"
           filename="../src/adw-swipeable.h"
           line="26">An interface for swipeable widgets.</doc>
      <source-position filename="../src/adw-swipeable.h" line="62"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="../src/adw-swipeable.h"
             line="28">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="switch_child">
        <callback name="switch_child">
          <source-position filename="../src/adw-swipeable.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="64">a #AdwSwipeable</doc>
              <type name="Swipeable" c:type="AdwSwipeable*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="65">the index of the child to switch to</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="duration" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="66">Animation duration in milliseconds</doc>
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_swipe_tracker">
        <callback name="get_swipe_tracker">
          <source-position filename="../src/adw-swipeable.h" line="49"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="116">the swipe tracker</doc>
            <type name="SwipeTracker" c:type="AdwSwipeTracker*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="112">a #AdwSwipeable</doc>
              <type name="Swipeable" c:type="AdwSwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_distance">
        <callback name="get_distance">
          <source-position filename="../src/adw-swipeable.h" line="50"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="140">the swipe distance in pixels</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="135">a #AdwSwipeable</doc>
              <type name="Swipeable" c:type="AdwSwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_snap_points">
        <callback name="get_snap_points">
          <source-position filename="../src/adw-swipeable.h" line="51"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="165">the snap points of
    @self. The array must be freed with g_free().</doc>
            <array length="1" zero-terminated="0" c:type="gdouble*">
              <type name="gdouble" c:type="gdouble"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="159">a #AdwSwipeable</doc>
              <type name="Swipeable" c:type="AdwSwipeable*"/>
            </parameter>
            <parameter name="n_snap_points"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="160">location to return the number of the snap points</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_progress">
        <callback name="get_progress">
          <source-position filename="../src/adw-swipeable.h" line="53"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="190">the current progress, unitless</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="186">a #AdwSwipeable</doc>
              <type name="Swipeable" c:type="AdwSwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_cancel_progress">
        <callback name="get_cancel_progress">
          <source-position filename="../src/adw-swipeable.h" line="54"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-swipeable.c"
                 line="213">the cancel progress, unitless</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="209">a #AdwSwipeable</doc>
              <type name="Swipeable" c:type="AdwSwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_swipe_area">
        <callback name="get_swipe_area">
          <source-position filename="../src/adw-swipeable.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="232">a #AdwSwipeable</doc>
              <type name="Swipeable" c:type="AdwSwipeable*"/>
            </parameter>
            <parameter name="navigation_direction" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="233">the direction of the swipe</doc>
              <type name="NavigationDirection"
                    c:type="AdwNavigationDirection"/>
            </parameter>
            <parameter name="is_drag" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="234">whether the swipe is caused by a dragging gesture</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="rect"
                       direction="out"
                       caller-allocates="1"
                       transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/adw-swipeable.c"
                   line="235">a pointer to a #GdkRectangle to store the swipe area</doc>
              <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="ValueObject"
           c:symbol-prefix="value_object"
           c:type="AdwValueObject"
           parent="GObject.Object"
           glib:type-name="AdwValueObject"
           glib:get-type="adw_value_object_get_type"
           glib:type-struct="ValueObjectClass">
      <source-position filename="../src/adw-value-object.h" line="23"/>
      <constructor name="new"
                   c:identifier="adw_value_object_new"
                   version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="40">Create a new #AdwValueObject.</doc>
        <source-position filename="../src/adw-value-object.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-value-object.c"
               line="46">a new #AdwValueObject</doc>
          <type name="ValueObject" c:type="AdwValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="42">the #GValue to store</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_collect"
                   c:identifier="adw_value_object_new_collect"
                   version="0.0.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="57">Creates a new #AdwValueObject. This is a convenience method which uses
the G_VALUE_COLLECT() macro internally.</doc>
        <source-position filename="../src/adw-value-object.h" line="28"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-value-object.c"
               line="65">a new #AdwValueObject</doc>
          <type name="ValueObject" c:type="AdwValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="59">the #GType of the value</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="60">the value to store</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_string"
                   c:identifier="adw_value_object_new_string"
                   version="0.0.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="89">Creates a new #AdwValueObject. This is a convenience method to create a
#AdwValueObject that stores a string.</doc>
        <source-position filename="../src/adw-value-object.h" line="31"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-value-object.c"
               line="96">a new #AdwValueObject</doc>
          <type name="ValueObject" c:type="AdwValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="91">the string to store</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_take_string"
                   c:identifier="adw_value_object_new_take_string"
                   version="0.0.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="109">Creates a new #AdwValueObject. This is a convenience method to create a
#AdwValueObject that stores a string taking ownership of it.</doc>
        <source-position filename="../src/adw-value-object.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-value-object.c"
               line="116">a new #AdwValueObject</doc>
          <type name="ValueObject" c:type="AdwValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="111">the string to store</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy_value"
              c:identifier="adw_value_object_copy_value"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="221">Copy data from the contained #GValue into @dest.</doc>
        <source-position filename="../src/adw-value-object.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="223">the #AdwValueObject</doc>
            <type name="ValueObject" c:type="AdwValueObject*"/>
          </instance-parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="224">#GValue with correct type to copy into</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_string"
              c:identifier="adw_value_object_dup_string"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="252">Returns a copy of the contained string if the value is of type
#G_TYPE_STRING.</doc>
        <source-position filename="../src/adw-value-object.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-value-object.c"
               line="259">a copy of the contained string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="254">the #AdwValueObject</doc>
            <type name="ValueObject" c:type="AdwValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="adw_value_object_get_string"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="237">Returns the contained string if the value is of type #G_TYPE_STRING.</doc>
        <source-position filename="../src/adw-value-object.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-value-object.c"
               line="243">the contained string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="239">the #AdwValueObject</doc>
            <type name="ValueObject" c:type="AdwValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="adw_value_object_get_value"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/adw-value-object.c"
             line="206">Return the contained value.</doc>
        <source-position filename="../src/adw-value-object.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-value-object.c"
               line="212">the contained #GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-value-object.c"
                 line="208">the #AdwValueObject</doc>
            <type name="ValueObject" c:type="AdwValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Value"/>
      </property>
    </class>
    <record name="ValueObjectClass"
            c:type="AdwValueObjectClass"
            glib:is-gtype-struct-for="ValueObject">
      <source-position filename="../src/adw-value-object.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ViewSwitcher"
           c:symbol-prefix="view_switcher"
           c:type="AdwViewSwitcher"
           parent="Gtk.Widget"
           glib:type-name="AdwViewSwitcher"
           glib:get-type="adw_view_switcher_get_type"
           glib:type-struct="ViewSwitcherClass">
      <source-position filename="../src/adw-view-switcher.h" line="23"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_view_switcher_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="545">Creates a new #AdwViewSwitcher widget.</doc>
        <source-position filename="../src/adw-view-switcher.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher.c"
               line="550">a new #AdwViewSwitcher</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_narrow_ellipsize"
              c:identifier="adw_view_switcher_get_narrow_ellipsize"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="603">Get the ellipsizing position of the narrow mode label. See
adw_view_switcher_set_narrow_ellipsize().</doc>
        <source-position filename="../src/adw-view-switcher.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher.c"
               line="610">#PangoEllipsizeMode</doc>
          <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="605">a #AdwViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="AdwViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_policy"
              c:identifier="adw_view_switcher_get_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="560">Gets the policy of @self.</doc>
        <source-position filename="../src/adw-view-switcher.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher.c"
               line="566">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="AdwViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="562">a #AdwViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="AdwViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="adw_view_switcher_get_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="654">Get the #GtkStack being controlled by the #AdwViewSwitcher.

See: adw_view_switcher_set_stack()</doc>
        <source-position filename="../src/adw-view-switcher.h" line="47"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher.c"
               line="662">the #GtkStack, or %NULL if none has been set</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="656">a #AdwViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="AdwViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_narrow_ellipsize"
              c:identifier="adw_view_switcher_set_narrow_ellipsize"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="622">Set the mode used to ellipsize the text in narrow mode if there is not
enough space to render the entire string.</doc>
        <source-position filename="../src/adw-view-switcher.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="624">a #AdwViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="AdwViewSwitcher*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="625">a #PangoEllipsizeMode</doc>
            <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="adw_view_switcher_set_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="578">Sets the policy of @self.</doc>
        <source-position filename="../src/adw-view-switcher.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="580">a #AdwViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="AdwViewSwitcher*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="581">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="AdwViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="adw_view_switcher_set_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="674">Sets the #GtkStack to control.</doc>
        <source-position filename="../src/adw-view-switcher.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="676">a #AdwViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="AdwViewSwitcher*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher.c"
                 line="677">a #GtkStack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <property name="narrow-ellipsize"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="494">The preferred place to ellipsize the string, if the narrow mode label does
not have enough room to display the entire string, specified as a
#PangoEllipsizeMode.

Note that setting this property to a value other than %PANGO_ELLIPSIZE_NONE
has the side-effect that the label requests only enough space to display
the ellipsis.</doc>
        <type name="Pango.EllipsizeMode"/>
      </property>
      <property name="policy"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="479">The #AdwViewSwitcherPolicy the view switcher should use to determine which
mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="stack"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="515">The #GtkStack the view switcher controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
    </class>
    <class name="ViewSwitcherBar"
           c:symbol-prefix="view_switcher_bar"
           c:type="AdwViewSwitcherBar"
           parent="Gtk.Widget"
           glib:type-name="AdwViewSwitcherBar"
           glib:get-type="adw_view_switcher_bar_get_type"
           glib:type-struct="ViewSwitcherBarClass">
      <source-position filename="../src/adw-view-switcher-bar.h" line="25"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_view_switcher_bar_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="255">Creates a new #AdwViewSwitcherBar widget.</doc>
        <source-position filename="../src/adw-view-switcher-bar.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-bar.c"
               line="260">a new #AdwViewSwitcherBar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_policy"
              c:identifier="adw_view_switcher_bar_get_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="270">Gets the policy of @self.</doc>
        <source-position filename="../src/adw-view-switcher-bar.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-bar.c"
               line="276">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="AdwViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="272">a #AdwViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="AdwViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal"
              c:identifier="adw_view_switcher_bar_get_reveal"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="372">Gets whether @self should be revealed or not.</doc>
        <source-position filename="../src/adw-view-switcher-bar.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-bar.c"
               line="378">%TRUE if @self is revealed, %FALSE if not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="374">a #AdwViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="AdwViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="adw_view_switcher_bar_get_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="313">Get the #GtkStack being controlled by the #AdwViewSwitcher.</doc>
        <source-position filename="../src/adw-view-switcher-bar.h" line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-bar.c"
               line="319">the #GtkStack, or %NULL if none has been set</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="315">a #AdwViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="AdwViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="adw_view_switcher_bar_set_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="288">Sets the policy of @self.</doc>
        <source-position filename="../src/adw-view-switcher-bar.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="290">a #AdwViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="AdwViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="291">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="AdwViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal"
              c:identifier="adw_view_switcher_bar_set_reveal"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="390">Sets whether @self should be revealed or not.</doc>
        <source-position filename="../src/adw-view-switcher-bar.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="392">a #AdwViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="AdwViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="reveal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="393">%TRUE to reveal @self</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="adw_view_switcher_bar_set_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="331">Sets the #GtkStack to control.</doc>
        <source-position filename="../src/adw-view-switcher-bar.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="333">a #AdwViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="AdwViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-bar.c"
                 line="334">a #GtkStack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <property name="policy"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="186">The #AdwViewSwitcherPolicy the #AdwViewSwitcher should use to determine
which mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="reveal"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="215">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="stack"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-bar.c"
             line="201">The #GtkStack the #AdwViewSwitcher controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
    </class>
    <record name="ViewSwitcherBarClass"
            c:type="AdwViewSwitcherBarClass"
            glib:is-gtype-struct-for="ViewSwitcherBar">
      <source-position filename="../src/adw-view-switcher-bar.h" line="25"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <record name="ViewSwitcherClass"
            c:type="AdwViewSwitcherClass"
            glib:is-gtype-struct-for="ViewSwitcher">
      <source-position filename="../src/adw-view-switcher.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <enumeration name="ViewSwitcherPolicy"
                 glib:type-name="AdwViewSwitcherPolicy"
                 glib:get-type="adw_view_switcher_policy_get_type"
                 c:type="AdwViewSwitcherPolicy">
      <member name="auto"
              value="0"
              c:identifier="ADW_VIEW_SWITCHER_POLICY_AUTO"
              glib:nick="auto">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="44">Automatically adapt to the best fitting mode</doc>
      </member>
      <member name="narrow"
              value="1"
              c:identifier="ADW_VIEW_SWITCHER_POLICY_NARROW"
              glib:nick="narrow">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="45">Force the narrow mode</doc>
      </member>
      <member name="wide"
              value="2"
              c:identifier="ADW_VIEW_SWITCHER_POLICY_WIDE"
              glib:nick="wide">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher.c"
             line="46">Force the wide mode</doc>
      </member>
    </enumeration>
    <class name="ViewSwitcherTitle"
           c:symbol-prefix="view_switcher_title"
           c:type="AdwViewSwitcherTitle"
           parent="Gtk.Widget"
           glib:type-name="AdwViewSwitcherTitle"
           glib:get-type="adw_view_switcher_title_get_type"
           glib:type-struct="ViewSwitcherTitleClass">
      <source-position filename="../src/adw-view-switcher-title.h" line="25"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <constructor name="new"
                   c:identifier="adw_view_switcher_title_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="343">Creates a new #AdwViewSwitcherTitle widget.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-title.c"
               line="348">a new #AdwViewSwitcherTitle</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_policy"
              c:identifier="adw_view_switcher_title_get_policy"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="358">Gets the policy of @self.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-title.c"
               line="364">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="AdwViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="360">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="adw_view_switcher_title_get_stack"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="401">Get the #GtkStack being controlled by the #AdwViewSwitcher.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-title.c"
               line="407">the #GtkStack, or %NULL if none has been set</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="403">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="adw_view_switcher_title_get_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="503">Gets the subtitle of @self. See adw_view_switcher_title_set_subtitle().</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="49"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-title.c"
               line="509">the subtitle of @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="505">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="adw_view_switcher_title_get_title"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="460">Gets the title of @self. See adw_view_switcher_title_set_title().</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="43"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-title.c"
               line="466">the title of @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="462">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title_visible"
              c:identifier="adw_view_switcher_title_get_title_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="597">Get whether the title label of @self is visible.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-title.c"
               line="603">%TRUE if the title label of @self is visible, %FALSE if not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="599">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view_switcher_enabled"
              c:identifier="adw_view_switcher_title_get_view_switcher_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="546">Gets whether @self's view switcher is enabled.

See adw_view_switcher_title_set_view_switcher_enabled().</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-view-switcher-title.c"
               line="554">%TRUE if the view switcher is enabled, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="548">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="adw_view_switcher_title_set_policy"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="376">Sets the policy of @self.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="378">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="379">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="AdwViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="adw_view_switcher_title_set_stack"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="419">Sets the #GtkStack to control.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="421">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="422">a #GtkStack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="adw_view_switcher_title_set_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="521">Sets the subtitle of @self. The subtitle should give a user additional
details.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="523">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="524">a subtitle, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="adw_view_switcher_title_set_title"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="478">Sets the title of @self. The title should give a user additional details. A
good title should not include the application name.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="480">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="481">a title, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_view_switcher_enabled"
              c:identifier="adw_view_switcher_title_set_view_switcher_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="566">Make @self enable or disable its view switcher. If it is disabled, the title
will be displayed instead. This allows to programmatically and prematurely
hide the view switcher of @self even if it fits in the available space.

This can be used e.g. to ensure the view switcher is hidden below a certain
window width, or any other constraint you find suitable.</doc>
        <source-position filename="../src/adw-view-switcher-title.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="568">a #AdwViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="AdwViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-view-switcher-title.c"
                 line="569">%TRUE to enable the view switcher, %FALSE to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="policy"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="229">The #AdwViewSwitcherPolicy the #AdwViewSwitcher should use to determine
which mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="stack"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="244">The #GtkStack the #AdwViewSwitcher controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="272">The subtitle of the #AdwViewSwitcher.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="258">The title of the #AdwViewSwitcher.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title-visible" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="300">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="view-switcher-enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-view-switcher-title.c"
             line="286">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ViewSwitcherTitleClass"
            c:type="AdwViewSwitcherTitleClass"
            glib:is-gtype-struct-for="ViewSwitcherTitle">
      <source-position filename="../src/adw-view-switcher-title.h" line="25"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <class name="Window"
           c:symbol-prefix="window"
           c:type="AdwWindow"
           parent="Gtk.Window"
           glib:type-name="AdwWindow"
           glib:get-type="adw_window_get_type"
           glib:type-struct="WindowClass">
      <source-position filename="../src/adw-window.h" line="30"/>
      <implements name="Gtk.Accessible"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.ConstraintTarget"/>
      <implements name="Gtk.Native"/>
      <implements name="Gtk.Root"/>
      <implements name="Gtk.ShortcutManager"/>
      <constructor name="new" c:identifier="adw_window_new" version="1.0">
        <doc xml:space="preserve"
             filename="../src/adw-window.c"
             line="190">Creates a new #AdwWindow.</doc>
        <source-position filename="../src/adw-window.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/adw-window.c"
               line="195">a newly created #AdwWindow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_child" c:identifier="adw_window_get_child">
        <doc xml:space="preserve"
             filename="../src/adw-window.c"
             line="224">Gets the child widget of @self.</doc>
        <source-position filename="../src/adw-window.h" line="39"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/adw-window.c"
               line="230">the child widget of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-window.c"
                 line="226">a #AdwWindow</doc>
            <type name="Window" c:type="AdwWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child" c:identifier="adw_window_set_child">
        <doc xml:space="preserve"
             filename="../src/adw-window.c"
             line="205">Sets the child widget of @self.</doc>
        <source-position filename="../src/adw-window.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/adw-window.c"
                 line="207">a #AdwWindow</doc>
            <type name="Window" c:type="AdwWindow*"/>
          </instance-parameter>
          <parameter name="child"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/adw-window.c"
                 line="208">the child widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Window" c:type="GtkWindow"/>
      </field>
    </class>
    <record name="WindowClass"
            c:type="AdwWindowClass"
            glib:is-gtype-struct-for="Window">
      <source-position filename="../src/adw-window.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.WindowClass" c:type="GtkWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <docsection name="adw-action-row">
      <doc xml:space="preserve"
           filename="../src/adw-action-row.c"
           line="12">The #AdwActionRow widget can have a title, a subtitle and an icon. The row
can receive additional widgets at its end, or prefix widgets at its start.

It is convenient to present a preference and its related actions.

#AdwActionRow is unactivatable by default, giving it an activatable widget
will automatically make it activatable, but unsetting it won't change the
row's activatability.

# AdwActionRow as GtkBuildable

The GtkWindow implementation of the GtkBuildable interface supports setting a
child at its end by omitting the “type” attribute of a &amp;lt;child&amp;gt; element.

It also supports setting a child as a prefix widget by specifying “prefix” as
the “type” attribute of a &amp;lt;child&amp;gt; element.

# CSS nodes

#AdwActionRow has a main CSS node with name row.

It contains the subnode box.header for its main horizontal box, and box.title
for the vertical box containing the title and subtitle labels.

It contains subnodes label.title and label.subtitle representing respectively
the title label and subtitle label.</doc>
    </docsection>
    <docsection name="adw-animation">
      <doc xml:space="preserve"
           filename="../src/adw-animation.c"
           line="11">Animation helpers.</doc>
    </docsection>
    <docsection name="adw-application-window">
      <doc xml:space="preserve"
           filename="../src/adw-application-window.c"
           line="12">AdwApplicationWindow is a #GtkApplicationWindow subclass providing the same
features as #AdwWindow.

See #AdwWindow for details.

Using gtk_application_set_app_menu() and gtk_application_set_menubar() is
not supported and may result in visual glitches.</doc>
    </docsection>
    <docsection name="adw-avatar">
      <doc xml:space="preserve"
           filename="../src/adw-avatar.c"
           line="20">#AdwAvatar is a widget to display a round avatar.
A provided image is made round before displaying, if no image is given this
widget generates a round fallback with the initials of the #AdwAvatar:text
on top of a colord background.
The color is picked based on the hash of the #AdwAvatar:text.
If #AdwAvatar:show-initials is set to %FALSE, `avatar-default-symbolic` is
shown in place of the initials.
Use adw_avatar_set_image_load_func () to set a custom image.
Create a #AdwAvatarImageLoadFunc similar to this example:

|[&lt;!-- language="C" --&gt;
static GdkPixbuf *
image_load_func (gint size, gpointer user_data)
{
  g_autoptr (GError) error = NULL;
  g_autoptr (GdkPixbuf) pixbuf = NULL;
  g_autofree gchar *file = gtk_file_chooser_get_filename ("avatar.png");
  gint width, height;

  gdk_pixbuf_get_file_info (file, &amp;width, &amp;height);

  pixbuf = gdk_pixbuf_new_from_file_at_scale (file,
                                             (width &lt;= height) ? size : -1,
                                             (width &gt;= height) ? size : -1,
                                             TRUE,
                                             error);
  if (error != NULL) {
   g_critical ("Failed to create pixbuf from file: %s", error-&gt;message);

   return NULL;
  }

  return pixbuf;
}
]|

# CSS nodes

#AdwAvatar has a single CSS node with name avatar.</doc>
    </docsection>
    <docsection name="adw-carousel">
      <doc xml:space="preserve"
           filename="../src/adw-carousel.c"
           line="22">The #AdwCarousel widget can be used to display a set of pages with
swipe-based navigation between them.

# CSS nodes

#AdwCarousel has a single CSS node with name carousel.</doc>
    </docsection>
    <docsection name="adw-carousel-indicator-dots">
      <doc xml:space="preserve"
           filename="../src/adw-carousel-indicator-dots.c"
           line="24">The #AdwCarouselIndicatorDots widget can be used to show a set of dots for each
page of a given #AdwCarousel. The dot representing the carousel's active page
is larger and more opaque than the others, the transition to the active and
inactive state is gradual to match the carousel's position.

# CSS nodes

#AdwCarouselIndicatorDots has a single CSS node with name carouselindicatordots.</doc>
    </docsection>
    <docsection name="adw-carousel-indicator-lines">
      <doc xml:space="preserve"
           filename="../src/adw-carousel-indicator-lines.c"
           line="24">The #AdwCarouselIndicatorLines widget can be used to show a set of thin and long
rectangles for each page of a given #AdwCarousel. The carousel's active page
is shown with another rectangle that moves between them to match the
carousel's position.

# CSS nodes

#AdwCarouselIndicatorLines has a single CSS node with name carouselindicatorlines.</doc>
    </docsection>
    <docsection name="adw-clamp">
      <doc xml:space="preserve"
           filename="../src/adw-clamp.c"
           line="14">The #AdwClamp widget constraints the size of the widget it contains to a
given maximum size. It will constrain the width if it is horizontal, or the
height if it is vertical. The expansion of the child from its minimum to its
maximum size is eased out for a smooth transition.

If the child requires more than the requested maximum size, it will be
allocated the minimum size it can fit in instead.

# CSS nodes

#AdwClamp has a single CSS node with name clamp. The node will get the style
classes .large when its child reached its maximum size, .small when the clamp
allocates its full size to its child, .medium in-between, or none if it
didn't compute its size yet.</doc>
    </docsection>
    <docsection name="adw-clamp-layout">
      <doc xml:space="preserve"
           filename="../src/adw-clamp-layout.c"
           line="15">The #AdwClamp widget constraints the size of the widget it contains to a
given maximum size. It will constrain the width if it is horizontal, or the
height if it is vertical. The expansion of the child from its minimum to its
maximum size is eased out for a smooth transition.

If the child requires more than the requested maximum size, it will be
allocated the minimum size it can fit in instead.

# CSS nodes

#AdwClamp has a single CSS node with name clamp. The node will get the style
classes .large when its child reached its maximum size, .small when the clamp
allocates its full size to its child, .medium in-between, or none if it
didn't compute its size yet.</doc>
    </docsection>
    <docsection name="adw-clamp-scrollable">
      <doc xml:space="preserve"
           filename="../src/adw-clamp-scrollable.c"
           line="14">The #AdwClamp widget constraints the size of the widget it contains to a
given maximum size. It will constrain the width if it is horizontal, or the
height if it is vertical. The expansion of the child from its minimum to its
maximum size is eased out for a smooth transition.

If the child requires more than the requested maximum size, it will be
allocated the minimum size it can fit in instead.

# CSS nodes

#AdwClamp has a single CSS node with name clamp. The node will get the style
classes .large when its child reached its maximum size, .small when the clamp
allocates its full size to its child, .medium in-between, or none if it
didn't compute its size yet.</doc>
    </docsection>
    <docsection name="adw-combo-row">
      <doc xml:space="preserve"
           filename="../src/adw-combo-row.c"
           line="18">The #AdwComboRow widget allows the user to choose from a list of valid
choices. The row displays the selected choice. When activated, the row
displays a popover which allows the user to make a new choice.

The #AdwComboRow uses the model-view pattern; the list of valid choices
is specified in the form of a #GListModel, and the display of the choices can
be adapted to the data in the model via widget creation functions.

#AdwComboRow is #GtkListBoxRow:activatable if a model is set.

# CSS nodes

#AdwComboRow has a main CSS node with name row.

Its popover has the node name popover with the .combo style class, it
contains a #GtkScrolledWindow, which in turn contains a #GtkListBox, both are
accessible via their regular nodes.

A checkmark of node and style class image.checkmark in the popover denotes
the current item.</doc>
    </docsection>
    <docsection name="adw-enum-list-model">
      <doc xml:space="preserve"
           filename="../src/adw-enum-list-model.c"
           line="15">TODO</doc>
    </docsection>
    <docsection name="adw-enum-value-object">
      <doc xml:space="preserve"
           filename="../src/adw-enum-value-object.c"
           line="12">The #AdwEnumValueObject object represents a #GEnumValue, allowing it to be
used with #GListModel.</doc>
    </docsection>
    <docsection name="adw-expander-row">
      <doc xml:space="preserve"
           filename="../src/adw-expander-row.c"
           line="13">The #AdwExpanderRow allows the user to reveal or hide widgets below it. It
also allows the user to enable the expansion of the row, allowing to disable
all that the row contains.

It also supports adding a child as an action widget by specifying “action” as
the “type” attribute of a &amp;lt;child&amp;gt; element. It also supports setting a
child as a prefix widget by specifying “prefix” as the “type” attribute of a
&amp;lt;child&amp;gt; element.

# CSS nodes

#AdwExpanderRow has a main CSS node with name row, and the .expander style
class. It has the .empty style class when it contains no children.

It contains the subnodes row.header for its main embedded row, list.nested
for the list it can expand, and image.expander-row-arrow for its arrow.

When expanded, #AdwExpanderRow will add the
.checked-expander-row-previous-sibling style class to its previous sibling,
and remove it when retracted.</doc>
    </docsection>
    <docsection name="adw-flap">
      <doc xml:space="preserve"
           filename="../src/adw-flap.c"
           line="20">The #AdwFlap widget can display its children like a #GtkBox does or like a
#GtkOverlay does, according to the #AdwFlap:fold-policy value.

#AdwFlap has at most three children: #AdwFlap:content, #AdwFlap:flap and
#AdwFlap:separator. Content is the primary child, flap is displayed next to
it when unfolded, or overlays it when folded. Flap can be shown or hidden by
changing the #AdwFlap:reveal-flap value, as well as via swipe gestures if
#AdwFlap:swipe-to-open and/or #AdwFlap:swipe-to-close are set to %TRUE.

Optionally, a separator can be provided, which would be displayed between
the content and the flap when there's no shadow to separate them, depending
on the transition type.

#AdwFlap:flap is transparent by default; add the .background style class to
it if this is unwanted.

If #AdwFlap:modal is set to %TRUE, content becomes completely inaccessible
when the flap is revealed when folded.

The position of the flap and separator children relative to the content is
determined by orientation, as well as  #AdwFlap:flap-position value.

Folding the flap will automatically hide the flap widget, and unfolding it
will automatically reveal it. If this behavior is not desired, the
#AdwFlap:locked property can be used to override it.

Common use cases include sidebars, header bars that need to be able to
overlap the window content (for example, in fullscreen mode) and bottom
sheets.

# AdwFlap as GtkBuildable

The #AdwFlap implementation of the #GtkBuildable interface supports setting
the flap child by specifying “flap” as the “type” attribute of a
&amp;lt;child&amp;gt; element, and separator by specifying “separator”. Specifying
“content” child type or omitting it results in setting the content child.

# CSS nodes

#AdwFlap has a single CSS node with name flap. The node will get the style
classes .folded when it is folded, and .unfolded when it's not.</doc>
    </docsection>
    <docsection name="adw-header-bar">
      <doc xml:space="preserve"
           filename="../src/adw-header-bar.c"
           line="29">AdwHeaderBar is similar to #GtkHeaderBar but is designed to fix some of its
shortcomings for adaptive applications.

# CSS nodes

|[&lt;!-- language="plain" --&gt;
headerbar
╰── windowhandle
    ╰── box
        ├── box.start
        │   ├── windowcontrols.start
        │   ╰── [other children]
        ├── [Title Widget]
        ╰── box.end
            ├── [other children]
            ╰── windowcontrols.end</doc>
    </docsection>
    <docsection name="adw-header-group">
      <doc xml:space="preserve"
           filename="../src/adw-header-group.c"
           line="12">The #AdwHeaderGroup object handles the header bars of a composite title bar.
It splits the window decoration across the header bars, giving the left side
of the decorations to the leftmost header bar, and the right side of the
decorations to the rightmost header bar.
See adw_header_bar_set_decoration_layout().

The #AdwHeaderGroup:decorate-all property can be used in conjunction with
#AdwLeaflet:folded when the title bar is split across the pages of a
#AdwLeaflet to automatically display the decorations on all the pages when
the leaflet is folded.

You can nest header groups, which is convenient when you nest leaflets too:
|[
&lt;object class="AdwHeaderGroup" id="inner_header_group"&gt;
  &lt;property name="decorate-all" bind-source="inner_leaflet" bind-property="folded" bind-flags="sync-create"/&gt;
  &lt;headerbars&gt;
    &lt;headerbar name="inner_header_bar_1"/&gt;
    &lt;headerbar name="inner_header_bar_2"/&gt;
  &lt;/headerbars&gt;
&lt;/object&gt;
&lt;object class="AdwHeaderGroup" id="outer_header_group"&gt;
  &lt;property name="decorate-all" bind-source="outer_leaflet" bind-property="folded" bind-flags="sync-create"/&gt;
  &lt;headerbars&gt;
    &lt;headerbar name="inner_header_group"/&gt;
    &lt;headerbar name="outer_header_bar"/&gt;
  &lt;/headerbars&gt;
&lt;/object&gt;
]|</doc>
    </docsection>
    <docsection name="adw-keypad">
      <doc xml:space="preserve"
           filename="../src/adw-keypad.c"
           line="13">The #AdwKeypad widget is a keypad for entering numbers such as phone numbers
or PIN codes.

# CSS nodes

#AdwKeypad has a single CSS node with name keypad.</doc>
    </docsection>
    <docsection name="adw-leaflet">
      <doc xml:space="preserve"
           filename="../src/adw-leaflet.c"
           line="19">The #AdwLeaflet widget can display its children like a #GtkBox does or
like a #GtkStack does, adapting to size changes by switching between
the two modes.

When there is enough space the children are displayed side by side, otherwise
only one is displayed and the leaflet is said to be “folded”.
The threshold is dictated by the preferred minimum sizes of the children.
When a leaflet is folded, the children can be navigated using swipe gestures.

The “over” and “under” stack the children one on top of the other, while the
“slide” transition puts the children side by side. While navigating to a
child on the side or below can be performed by swiping the current child
away, navigating to an upper child requires dragging it from the edge where
it resides. This doesn't affect non-dragging swipes.

The “over” and “under” transitions can draw their shadow on top of the
window's transparent areas, like the rounded corners. This is a side-effect
of allowing shadows to be drawn on top of OpenGL areas. It can be mitigated
by using #AdwWindow or #AdwApplicationWindow as they will crop anything drawn
beyond the rounded corners.

# CSS nodes

#AdwLeaflet has a single CSS node with name leaflet. The node will get the
style classes .folded when it is folded, .unfolded when it's not, or none if
it didn't compute its fold yet.</doc>
    </docsection>
    <docsection name="adw-main">
      <doc xml:space="preserve"
           filename="../src/adw-main.c"
           line="14">Before using the Adwaita library you should initialize it by calling the
adw_init() function.
This makes sure translations, types, themes, and icons for the Adwaita
library are set up properly.</doc>
    </docsection>
    <docsection name="adw-preferences-group">
      <doc xml:space="preserve"
           filename="../src/adw-preferences-group.c"
           line="14">A #AdwPreferencesGroup represents a group or tightly related preferences,
which in turn are represented by AdwPreferencesRow.

To summarize the role of the preferences it gathers, a group can have both a
title and a description. The title will be used by #AdwPreferencesWindow to
let the user look for a preference.

# CSS nodes

#AdwPreferencesGroup has a single CSS node with name preferencesgroup.</doc>
    </docsection>
    <docsection name="adw-preferences-page">
      <doc xml:space="preserve"
           filename="../src/adw-preferences-page.c"
           line="14">The #AdwPreferencesPage widget gathers preferences groups into a single page
of a preferences window.

# CSS nodes

#AdwPreferencesPage has a single CSS node with name preferencespage.</doc>
    </docsection>
    <docsection name="adw-preferences-row">
      <doc xml:space="preserve"
           filename="../src/adw-preferences-row.c"
           line="12">The #AdwPreferencesRow widget has a title that #AdwPreferencesWindow will use
to let the user look for a preference. It doesn't present the title in any
way and it lets you present the preference as you please.

#AdwActionRow and its derivatives are convenient to use as preference rows as
they take care of presenting the preference's title while letting you compose
the inputs of the preference around it.</doc>
    </docsection>
    <docsection name="adw-preferences-window">
      <doc xml:space="preserve"
           filename="../src/adw-preferences-window.c"
           line="21">The #AdwPreferencesWindow widget presents an application's preferences
gathered into pages and groups. The preferences are searchable by the user.</doc>
    </docsection>
    <docsection name="adw-squeezer">
      <doc xml:space="preserve"
           filename="../src/adw-squeezer.c"
           line="25">The AdwSqueezer widget is a container which only shows the first of its
children that fits in the available size. It is convenient to offer different
widgets to represent the same data with different levels of detail, making
the widget seem to squeeze itself to fit in the available space.

Transitions between children can be animated as fades. This can be controlled
with adw_squeezer_set_transition_type().

# CSS nodes

#AdwSqueezer has a single CSS node with name squeezer.</doc>
    </docsection>
    <docsection name="adw-status-page">
      <doc xml:space="preserve"
           filename="../src/adw-status-page.c"
           line="12">The #AdwStatusPage widget can have an icon, a title, a description and a
custom widget which is displayed below them.

# CSS nodes

#AdwStatusPage has a main CSS node with name statuspage.</doc>
    </docsection>
    <docsection name="adw-swipe-group">
      <doc xml:space="preserve"
           filename="../src/adw-swipe-group.c"
           line="19">The #AdwSwipeGroup object can be used to sync multiple swipeable widgets
that implement the #AdwSwipeable interface, such as #AdwCarousel, so that
animating one of them also animates all the other widgets in the group.

This can be useful for syncing widgets between a window's titlebar and
content area.

# #AdwSwipeGroup as #GtkBuildable

#AdwSwipeGroup can be created in an UI definition. The list of swipeable
widgets is specified with a &amp;lt;swipeables&amp;gt; element containing multiple
&amp;lt;swipeable&amp;gt; elements with their ”name” attribute specifying the id of
the widgets.

|[
&lt;object class="AdwSwipeGroup"&gt;
  &lt;swipeables&gt;
    &lt;swipeable name="carousel1"/&gt;
    &lt;swipeable name="carousel2"/&gt;
  &lt;/swipeables&gt;
&lt;/object&gt;
]|</doc>
    </docsection>
    <docsection name="adw-swipe-tracker">
      <doc xml:space="preserve"
           filename="../src/adw-swipe-tracker.c"
           line="25">The AdwSwipeTracker object can be used for implementing widgets with swipe
gestures. It supports touch-based swipes, pointer dragging, and touchpad
scrolling.

The widgets will probably want to expose #AdwSwipeTracker:enabled property.
If they expect to use horizontal orientation, #AdwSwipeTracker:reversed
property can be used for supporting RTL text direction.</doc>
    </docsection>
    <docsection name="adw-swipeable">
      <doc xml:space="preserve"
           filename="../src/adw-swipeable.c"
           line="11">The #AdwSwipeable interface is implemented by all swipeable widgets. They
can be synced using #AdwSwipeGroup.

See #AdwSwipeTracker for details about implementing it.</doc>
    </docsection>
    <docsection name="adw-value-object">
      <doc xml:space="preserve"
           filename="../src/adw-value-object.c"
           line="12">The #AdwValueObject object represents a #GValue, allowing it to be
used with #GListModel.</doc>
    </docsection>
    <docsection name="adw-view-switcher">
      <doc xml:space="preserve"
           filename="../src/adw-view-switcher.c"
           line="18">An adaptive view switcher, designed to switch between multiple views in a
similar fashion than a #GtkStackSwitcher.

Depending on the available width, the view switcher can adapt from a wide
mode showing the view's icon and title side by side, to a narrow mode showing
the view's icon and title one on top of the other, in a more compact way.
This can be controlled via the policy property.

To look good in a header bar, an #AdwViewSwitcher requires to fill its full
height. Contrary to #GtkHeaderBar, #AdwHeaderBar doesn't force a vertical
alignment on its title widget, so we recommend it over #GtkHeaderBar.

# CSS nodes

#AdwViewSwitcher has a single CSS node with name viewswitcher.</doc>
    </docsection>
    <docsection name="adw-view-switcher-bar">
      <doc xml:space="preserve"
           filename="../src/adw-view-switcher-bar.c"
           line="14">An action bar letting you switch between multiple views offered by a
#GtkStack, via an #AdwViewSwitcher. It is designed to be put at the bottom of
a window and to be revealed only on really narrow windows e.g. on mobile
phones. It can't be revealed if there are less than two pages.

You can conveniently bind the #AdwViewSwitcherBar:reveal property to
#AdwViewSwitcherTitle:title-visible to automatically reveal the view switcher
bar when the title label is displayed in place of the view switcher.

An example of the UI definition for a common use case:
|[
&lt;object class="GtkWindow"/&gt;
  &lt;child type="titlebar"&gt;
    &lt;object class="AdwHeaderBar"&gt;
      &lt;property name="centering-policy"&gt;strict&lt;/property&gt;
      &lt;child type="title"&gt;
        &lt;object class="AdwViewSwitcherTitle"
                id="view_switcher_title"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
  &lt;child&gt;
    &lt;object class="GtkBox"&gt;
      &lt;child&gt;
        &lt;object class="GtkStack" id="stack"/&gt;
      &lt;/child&gt;
      &lt;child&gt;
        &lt;object class="AdwViewSwitcherBar"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
          &lt;property name="reveal"
                    bind-source="view_switcher_title"
                    bind-property="title-visible"
                    bind-flags="sync-create"/&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
&lt;/object&gt;
]|

# CSS nodes

#AdwViewSwitcherBar has a single CSS node with name viewswitcherbar.</doc>
    </docsection>
    <docsection name="adw-view-switcher-title">
      <doc xml:space="preserve"
           filename="../src/adw-view-switcher-title.c"
           line="14">A widget letting you switch between multiple views offered by a #GtkStack,
via an #AdwViewSwitcher. It is designed to be used as the title widget of a
#AdwHeaderBar, and will display the window's title when the window is too
narrow to fit the view switcher e.g. on mobile phones, or if there are less
than two views.

You can conveniently bind the #AdwViewSwitcherBar:reveal property to
#AdwViewSwitcherTitle:title-visible to automatically reveal the view switcher
bar when the title label is displayed in place of the view switcher.

An example of the UI definition for a common use case:
|[
&lt;object class="GtkWindow"/&gt;
  &lt;child type="titlebar"&gt;
    &lt;object class="AdwHeaderBar"&gt;
      &lt;property name="centering-policy"&gt;strict&lt;/property&gt;
      &lt;child type="title"&gt;
        &lt;object class="AdwViewSwitcherTitle"
                id="view_switcher_title"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
  &lt;child&gt;
    &lt;object class="GtkBox"&gt;
      &lt;child&gt;
        &lt;object class="GtkStack" id="stack"/&gt;
      &lt;/child&gt;
      &lt;child&gt;
        &lt;object class="AdwViewSwitcherBar"&gt;
          &lt;property name="stack"&gt;stack&lt;/property&gt;
          &lt;property name="reveal"
                    bind-source="view_switcher_title"
                    bind-property="title-visible"
                    bind-flags="sync-create"/&gt;
        &lt;/object&gt;
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
&lt;/object&gt;
]|

# CSS nodes

#AdwViewSwitcherTitle has a single CSS node with name viewswitchertitle.</doc>
    </docsection>
    <docsection name="adw-window">
      <doc xml:space="preserve"
           filename="../src/adw-window.c"
           line="12">The AdwWindow widget is a subclass of #GtkWindow which has no titlebar area
and provides rounded corners on all sides, ensuring they can never be
overlapped by the content. This makes it safe to use headerbars in the
content area as follows:

|[
&lt;object class="AdwWindow"/&gt;
  &lt;child&gt;
    &lt;object class="GtkBox"&gt;
      &lt;property name="orientation"&gt;vertical&lt;/property&gt;
      &lt;child&gt;
        &lt;object class="AdwHeaderBar"/&gt;
      &lt;/child&gt;
      &lt;child&gt;
        ...
      &lt;/child&gt;
    &lt;/object&gt;
  &lt;/child&gt;
&lt;/object&gt;
]|

#AdwWindow allows to easily implement titlebar autohiding by putting the
headerbar inside a #GtkRevealer, and to show titlebar above content by
putting it into a #GtkOverlay instead of #GtkBox.

if the window has a #GtkGLArea, it may bring a slight performance regression
when the window is not fullscreen, tiled or maximized.

Using gtk_window_get_titlebar() and gtk_window_set_titlebar() is not
supported and will result in a crash.

# CSS nodes

#AdwWindow has a main CSS node with the name window and style classes
.background, .csd and .unified.

The .solid-csd style class on the main node is used for client-side
decorations without invisible borders.

#AdwWindow also represents window states with the following
style classes on the main node: .tiled, .maximized, .fullscreen.

It contains the subnodes decoration for window shadow and/or border,
decoration-overlay for the sheen on top of the window, widget.titlebar, and
deck, which contains the child inside the window.</doc>
    </docsection>
    <function name="ease_out_cubic"
              c:identifier="adw_ease_out_cubic"
              version="0.0.11">
      <doc xml:space="preserve"
           filename="../src/adw-animation.c"
           line="235">Computes the ease out for @t.</doc>
      <source-position filename="../src/adw-animation.h" line="23"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-animation.c"
             line="241">the ease out for @t.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="t" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-animation.c"
               line="237">the term</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_enable_animations"
              c:identifier="adw_get_enable_animations"
              version="0.0.11">
      <doc xml:space="preserve"
           filename="../src/adw-animation.c"
           line="188">Returns whether animations are enabled for that widget. This should be used
when implementing an animated widget to know whether to animate it or not.</doc>
      <source-position filename="../src/adw-animation.h" line="20"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/adw-animation.c"
             line="195">%TRUE if animations are enabled for @widget.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/adw-animation.c"
               line="190">a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="adw_init">
      <doc xml:space="preserve"
           filename="../src/adw-main.c"
           line="176">Call this function just after initializing GTK, if you are using
#GtkApplication it means it must be called when the #GApplication::startup
signal is emitted. If libadwaita has already been initialized, the function
will simply return.

This makes sure translations, types, themes, and icons for the Adwaita
library are set up properly.</doc>
      <source-position filename="../src/adw-main.h" line="19"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
  </namespace>
</repository>
